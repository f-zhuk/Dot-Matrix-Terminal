ARM GAS  /tmp/ccrGErMp.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB69:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "PrinterFont.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccrGErMp.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_TIM2_Init(void);
  54:Core/Src/main.c **** static void MX_NVIC_Init(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccrGErMp.s 			page 3


  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_TIM2_Init();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize interrupts */
  95:Core/Src/main.c ****   MX_NVIC_Init();
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Infinite loop */
 101:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 102:Core/Src/main.c ****   while (1)
 103:Core/Src/main.c ****   {
 104:Core/Src/main.c ****     /* USER CODE END WHILE */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 107:Core/Src/main.c ****   }
 108:Core/Src/main.c ****   /* USER CODE END 3 */
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****   * @brief System Clock Configuration
 113:Core/Src/main.c ****   * @retval None
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** void SystemClock_Config(void)
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 121:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     Error_Handler();
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 145:Core/Src/main.c ****   {
 146:Core/Src/main.c ****     Error_Handler();
 147:Core/Src/main.c ****   }
ARM GAS  /tmp/ccrGErMp.s 			page 4


 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief NVIC Configuration.
 152:Core/Src/main.c ****   * @retval None
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c **** static void MX_NVIC_Init(void)
 155:Core/Src/main.c **** {
 156:Core/Src/main.c ****   /* EXTI15_10_IRQn interrupt configuration */
 157:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 158:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 159:Core/Src/main.c **** }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /**
 162:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 163:Core/Src/main.c ****   * @param None
 164:Core/Src/main.c ****   * @retval None
 165:Core/Src/main.c ****   */
 166:Core/Src/main.c **** static void MX_TIM2_Init(void)
 167:Core/Src/main.c **** {
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 174:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 175:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 180:Core/Src/main.c ****   htim2.Instance = TIM2;
 181:Core/Src/main.c ****   htim2.Init.Prescaler = 7199;
 182:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 183:Core/Src/main.c ****   htim2.Init.Period = 10000;
 184:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 185:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 186:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 191:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c ****   if (HAL_TIM_OnePulse_Init(&htim2, TIM_OPMODE_SINGLE) != HAL_OK)
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****     Error_Handler();
 202:Core/Src/main.c ****   }
 203:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 204:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/ccrGErMp.s 			page 5


 205:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 210:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 211:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 212:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 213:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****     Error_Handler();
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** }
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /**
 224:Core/Src/main.c ****   * @brief GPIO Initialization Function
 225:Core/Src/main.c ****   * @param None
 226:Core/Src/main.c ****   * @retval None
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c **** static void MX_GPIO_Init(void)
 229:Core/Src/main.c **** {
  26              		.loc 1 229 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 230:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 230 3 view .LVU1
  43              		.loc 1 230 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 231:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 232:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 235:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 235 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 235 3 view .LVU4
ARM GAS  /tmp/ccrGErMp.s 			page 6


  52              		.loc 1 235 3 view .LVU5
  53 0010 304B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F01002 		orr	r2, r2, #16
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 235 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F01002 		and	r2, r2, #16
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 235 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 235 3 view .LVU8
 236:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  65              		.loc 1 236 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 236 3 view .LVU10
  68              		.loc 1 236 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F02002 		orr	r2, r2, #32
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 236 3 view .LVU12
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F02002 		and	r2, r2, #32
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 236 3 view .LVU13
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 236 3 view .LVU14
 237:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 237 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 237 3 view .LVU16
  83              		.loc 1 237 3 view .LVU17
  84 0036 9A69     		ldr	r2, [r3, #24]
  85 0038 42F00402 		orr	r2, r2, #4
  86 003c 9A61     		str	r2, [r3, #24]
  87              		.loc 1 237 3 view .LVU18
  88 003e 9A69     		ldr	r2, [r3, #24]
  89 0040 02F00402 		and	r2, r2, #4
  90 0044 0292     		str	r2, [sp, #8]
  91              		.loc 1 237 3 view .LVU19
  92 0046 029A     		ldr	r2, [sp, #8]
  93              	.LBE6:
  94              		.loc 1 237 3 view .LVU20
 238:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  95              		.loc 1 238 3 view .LVU21
  96              	.LBB7:
  97              		.loc 1 238 3 view .LVU22
  98              		.loc 1 238 3 view .LVU23
  99 0048 9A69     		ldr	r2, [r3, #24]
 100 004a 42F00802 		orr	r2, r2, #8
 101 004e 9A61     		str	r2, [r3, #24]
 102              		.loc 1 238 3 view .LVU24
 103 0050 9B69     		ldr	r3, [r3, #24]
 104 0052 03F00803 		and	r3, r3, #8
 105 0056 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccrGErMp.s 			page 7


 106              		.loc 1 238 3 view .LVU25
 107 0058 039B     		ldr	r3, [sp, #12]
 108              	.LBE7:
 109              		.loc 1 238 3 view .LVU26
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 241:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED_Pin|MTR_Pin, GPIO_PIN_RESET);
 110              		.loc 1 241 3 view .LVU27
 111 005a DFF87C80 		ldr	r8, .L3+4
 112 005e 2246     		mov	r2, r4
 113 0060 4FF42041 		mov	r1, #40960
 114 0064 4046     		mov	r0, r8
 115 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 116              	.LVL0:
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 244:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 117              		.loc 1 244 3 view .LVU28
 118 006a 1C4E     		ldr	r6, .L3+8
 119 006c 2246     		mov	r2, r4
 120 006e 40F2FF11 		movw	r1, #511
 121 0072 3046     		mov	r0, r6
 122 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL1:
 245:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
 246:Core/Src/main.c ****                           |GPIO_PIN_8, GPIO_PIN_RESET);
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /*Configure GPIO pins : LED_Pin MTR_Pin */
 249:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin|MTR_Pin;
 124              		.loc 1 249 3 view .LVU29
 125              		.loc 1 249 23 is_stmt 0 view .LVU30
 126 0078 4FF42043 		mov	r3, #40960
 127 007c 0493     		str	r3, [sp, #16]
 250:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 128              		.loc 1 250 3 is_stmt 1 view .LVU31
 129              		.loc 1 250 24 is_stmt 0 view .LVU32
 130 007e 0125     		movs	r5, #1
 131 0080 0595     		str	r5, [sp, #20]
 251:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 132              		.loc 1 251 3 is_stmt 1 view .LVU33
 133              		.loc 1 251 24 is_stmt 0 view .LVU34
 134 0082 0694     		str	r4, [sp, #24]
 252:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 135              		.loc 1 252 3 is_stmt 1 view .LVU35
 136              		.loc 1 252 25 is_stmt 0 view .LVU36
 137 0084 0227     		movs	r7, #2
 138 0086 0797     		str	r7, [sp, #28]
 253:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 139              		.loc 1 253 3 is_stmt 1 view .LVU37
 140 0088 04A9     		add	r1, sp, #16
 141 008a 4046     		mov	r0, r8
 142 008c FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL2:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA2 PA3
 256:Core/Src/main.c ****                            PA4 PA5 PA6 PA7
 257:Core/Src/main.c ****                            PA8 */
ARM GAS  /tmp/ccrGErMp.s 			page 8


 258:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 144              		.loc 1 258 3 view .LVU38
 145              		.loc 1 258 23 is_stmt 0 view .LVU39
 146 0090 40F2FF13 		movw	r3, #511
 147 0094 0493     		str	r3, [sp, #16]
 259:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
 260:Core/Src/main.c ****                           |GPIO_PIN_8;
 261:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 148              		.loc 1 261 3 is_stmt 1 view .LVU40
 149              		.loc 1 261 24 is_stmt 0 view .LVU41
 150 0096 0595     		str	r5, [sp, #20]
 262:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 151              		.loc 1 262 3 is_stmt 1 view .LVU42
 152              		.loc 1 262 24 is_stmt 0 view .LVU43
 153 0098 0694     		str	r4, [sp, #24]
 263:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 154              		.loc 1 263 3 is_stmt 1 view .LVU44
 155              		.loc 1 263 25 is_stmt 0 view .LVU45
 156 009a 0797     		str	r7, [sp, #28]
 264:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 157              		.loc 1 264 3 is_stmt 1 view .LVU46
 158 009c 04A9     		add	r1, sp, #16
 159 009e 3046     		mov	r0, r6
 160 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL3:
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /*Configure GPIO pin : LINE_Pin */
 267:Core/Src/main.c ****   GPIO_InitStruct.Pin = LINE_Pin;
 162              		.loc 1 267 3 view .LVU47
 163              		.loc 1 267 23 is_stmt 0 view .LVU48
 164 00a4 4FF48063 		mov	r3, #1024
 165 00a8 0493     		str	r3, [sp, #16]
 268:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 166              		.loc 1 268 3 is_stmt 1 view .LVU49
 167              		.loc 1 268 24 is_stmt 0 view .LVU50
 168 00aa 0594     		str	r4, [sp, #20]
 269:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 169              		.loc 1 269 3 is_stmt 1 view .LVU51
 170              		.loc 1 269 24 is_stmt 0 view .LVU52
 171 00ac 0694     		str	r4, [sp, #24]
 270:Core/Src/main.c ****   HAL_GPIO_Init(LINE_GPIO_Port, &GPIO_InitStruct);
 172              		.loc 1 270 3 is_stmt 1 view .LVU53
 173 00ae 0C4C     		ldr	r4, .L3+12
 174 00b0 04A9     		add	r1, sp, #16
 175 00b2 2046     		mov	r0, r4
 176 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 177              	.LVL4:
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /*Configure GPIO pin : OPTO_Pin */
 273:Core/Src/main.c ****   GPIO_InitStruct.Pin = OPTO_Pin;
 178              		.loc 1 273 3 view .LVU54
 179              		.loc 1 273 23 is_stmt 0 view .LVU55
 180 00b8 4FF40063 		mov	r3, #2048
 181 00bc 0493     		str	r3, [sp, #16]
 274:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 182              		.loc 1 274 3 is_stmt 1 view .LVU56
 183              		.loc 1 274 24 is_stmt 0 view .LVU57
ARM GAS  /tmp/ccrGErMp.s 			page 9


 184 00be 094B     		ldr	r3, .L3+16
 185 00c0 0593     		str	r3, [sp, #20]
 275:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 186              		.loc 1 275 3 is_stmt 1 view .LVU58
 187              		.loc 1 275 24 is_stmt 0 view .LVU59
 188 00c2 0695     		str	r5, [sp, #24]
 276:Core/Src/main.c ****   HAL_GPIO_Init(OPTO_GPIO_Port, &GPIO_InitStruct);
 189              		.loc 1 276 3 is_stmt 1 view .LVU60
 190 00c4 04A9     		add	r1, sp, #16
 191 00c6 2046     		mov	r0, r4
 192 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 193              	.LVL5:
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 279:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 280:Core/Src/main.c **** }
 194              		.loc 1 280 1 is_stmt 0 view .LVU61
 195 00cc 08B0     		add	sp, sp, #32
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 24
 198              		@ sp needed
 199 00ce BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 200              	.L4:
 201 00d2 00BF     		.align	2
 202              	.L3:
 203 00d4 00100240 		.word	1073876992
 204 00d8 00100140 		.word	1073811456
 205 00dc 00080140 		.word	1073809408
 206 00e0 000C0140 		.word	1073810432
 207 00e4 00001110 		.word	269549568
 208              		.cfi_endproc
 209              	.LFE69:
 211              		.section	.text.MX_NVIC_Init,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 217              	MX_NVIC_Init:
 218              	.LFB67:
 155:Core/Src/main.c ****   /* EXTI15_10_IRQn interrupt configuration */
 219              		.loc 1 155 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 08B5     		push	{r3, lr}
 224              	.LCFI3:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 3, -8
 227              		.cfi_offset 14, -4
 157:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 228              		.loc 1 157 3 view .LVU63
 229 0002 0022     		movs	r2, #0
 230 0004 1146     		mov	r1, r2
 231 0006 2820     		movs	r0, #40
 232 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 233              	.LVL6:
 158:Core/Src/main.c **** }
ARM GAS  /tmp/ccrGErMp.s 			page 10


 234              		.loc 1 158 3 view .LVU64
 235 000c 2820     		movs	r0, #40
 236 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 237              	.LVL7:
 159:Core/Src/main.c **** 
 238              		.loc 1 159 1 is_stmt 0 view .LVU65
 239 0012 08BD     		pop	{r3, pc}
 240              		.cfi_endproc
 241              	.LFE67:
 243              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 244              		.align	1
 245              		.global	HAL_GPIO_EXTI_Callback
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	HAL_GPIO_EXTI_Callback:
 251              	.LVL8:
 252              	.LFB70:
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 283:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 284:Core/Src/main.c **** {
 253              		.loc 1 284 1 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 285:Core/Src/main.c ****   static uint8_t counter = 0;
 257              		.loc 1 285 3 view .LVU67
 286:Core/Src/main.c ****   static uint16_t column = 0;
 258              		.loc 1 286 3 view .LVU68
 287:Core/Src/main.c ****   
 288:Core/Src/main.c ****   if(GPIO_Pin == OPTO_Pin) 
 259              		.loc 1 288 3 view .LVU69
 260              		.loc 1 288 5 is_stmt 0 view .LVU70
 261 0000 B0F5006F 		cmp	r0, #2048
 262 0004 01D0     		beq	.L15
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     GPIO_PinState line = HAL_GPIO_ReadPin(GPIOB, LINE_Pin);
 291:Core/Src/main.c ****     if(line == GPIO_PIN_RESET)
 292:Core/Src/main.c ****     {
 293:Core/Src/main.c ****       counter = 0;
 294:Core/Src/main.c ****       column = 0;
 295:Core/Src/main.c ****     }
 296:Core/Src/main.c ****     //HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 297:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, 0xFF, GPIO_PIN_RESET);
 298:Core/Src/main.c ****     counter++;
 299:Core/Src/main.c ****     if((counter >= 2) && (column < 240)) 
 300:Core/Src/main.c ****     {
 301:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, font[column], GPIO_PIN_SET);
 302:Core/Src/main.c ****       //HAL_GPIO_WritePin(GPIOA, 0xFF&(0x01<<(column>>3)), GPIO_PIN_SET);
 303:Core/Src/main.c ****       counter = 0;
 304:Core/Src/main.c ****       column++;
 305:Core/Src/main.c ****     }
 306:Core/Src/main.c ****     //HAL_TIM_OnePulse_Start_IT(&htim2, TIM_CHANNEL_3);
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   } else {
 309:Core/Src/main.c ****       __NOP();
ARM GAS  /tmp/ccrGErMp.s 			page 11


 263              		.loc 1 309 7 is_stmt 1 view .LVU71
 264              		.syntax unified
 265              	@ 309 "Core/Src/main.c" 1
 266 0006 00BF     		nop
 267              	@ 0 "" 2
 268              		.thumb
 269              		.syntax unified
 270 0008 7047     		bx	lr
 271              	.L15:
 284:Core/Src/main.c ****   static uint8_t counter = 0;
 272              		.loc 1 284 1 is_stmt 0 view .LVU72
 273 000a 08B5     		push	{r3, lr}
 274              	.LCFI4:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 3, -8
 277              		.cfi_offset 14, -4
 278              	.LBB8:
 290:Core/Src/main.c ****     if(line == GPIO_PIN_RESET)
 279              		.loc 1 290 5 is_stmt 1 view .LVU73
 290:Core/Src/main.c ****     if(line == GPIO_PIN_RESET)
 280              		.loc 1 290 26 is_stmt 0 view .LVU74
 281 000c 4FF48061 		mov	r1, #1024
 282 0010 1348     		ldr	r0, .L17
 283              	.LVL9:
 290:Core/Src/main.c ****     if(line == GPIO_PIN_RESET)
 284              		.loc 1 290 26 view .LVU75
 285 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 286              	.LVL10:
 291:Core/Src/main.c ****     {
 287              		.loc 1 291 5 is_stmt 1 view .LVU76
 291:Core/Src/main.c ****     {
 288              		.loc 1 291 7 is_stmt 0 view .LVU77
 289 0016 20B9     		cbnz	r0, .L9
 293:Core/Src/main.c ****       column = 0;
 290              		.loc 1 293 7 is_stmt 1 view .LVU78
 293:Core/Src/main.c ****       column = 0;
 291              		.loc 1 293 15 is_stmt 0 view .LVU79
 292 0018 0023     		movs	r3, #0
 293 001a 124A     		ldr	r2, .L17+4
 294 001c 1370     		strb	r3, [r2]
 294:Core/Src/main.c ****     }
 295              		.loc 1 294 7 is_stmt 1 view .LVU80
 294:Core/Src/main.c ****     }
 296              		.loc 1 294 14 is_stmt 0 view .LVU81
 297 001e 124A     		ldr	r2, .L17+8
 298 0020 1380     		strh	r3, [r2]	@ movhi
 299              	.L9:
 297:Core/Src/main.c ****     counter++;
 300              		.loc 1 297 5 is_stmt 1 view .LVU82
 301 0022 0022     		movs	r2, #0
 302 0024 FF21     		movs	r1, #255
 303 0026 1148     		ldr	r0, .L17+12
 304              	.LVL11:
 297:Core/Src/main.c ****     counter++;
 305              		.loc 1 297 5 is_stmt 0 view .LVU83
 306 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 307              	.LVL12:
ARM GAS  /tmp/ccrGErMp.s 			page 12


 298:Core/Src/main.c ****     if((counter >= 2) && (column < 240)) 
 308              		.loc 1 298 5 is_stmt 1 view .LVU84
 298:Core/Src/main.c ****     if((counter >= 2) && (column < 240)) 
 309              		.loc 1 298 12 is_stmt 0 view .LVU85
 310 002c 0D4A     		ldr	r2, .L17+4
 311 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 312 0030 0133     		adds	r3, r3, #1
 313 0032 DBB2     		uxtb	r3, r3
 314 0034 1370     		strb	r3, [r2]
 299:Core/Src/main.c ****     {
 315              		.loc 1 299 5 is_stmt 1 view .LVU86
 299:Core/Src/main.c ****     {
 316              		.loc 1 299 7 is_stmt 0 view .LVU87
 317 0036 012B     		cmp	r3, #1
 318 0038 03D9     		bls	.L7
 299:Core/Src/main.c ****     {
 319              		.loc 1 299 34 discriminator 1 view .LVU88
 320 003a 0B4B     		ldr	r3, .L17+8
 321 003c 1B88     		ldrh	r3, [r3]
 299:Core/Src/main.c ****     {
 322              		.loc 1 299 23 discriminator 1 view .LVU89
 323 003e EF2B     		cmp	r3, #239
 324 0040 00D9     		bls	.L16
 325              	.L7:
 326              	.LBE8:
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c **** }
 327              		.loc 1 311 1 view .LVU90
 328 0042 08BD     		pop	{r3, pc}
 329              	.L16:
 330              	.LBB9:
 301:Core/Src/main.c ****       //HAL_GPIO_WritePin(GPIOA, 0xFF&(0x01<<(column>>3)), GPIO_PIN_SET);
 331              		.loc 1 301 7 is_stmt 1 view .LVU91
 332 0044 0122     		movs	r2, #1
 333 0046 0A49     		ldr	r1, .L17+16
 334 0048 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 335 004a 0848     		ldr	r0, .L17+12
 336 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 337              	.LVL13:
 303:Core/Src/main.c ****       column++;
 338              		.loc 1 303 7 view .LVU92
 303:Core/Src/main.c ****       column++;
 339              		.loc 1 303 15 is_stmt 0 view .LVU93
 340 0050 044B     		ldr	r3, .L17+4
 341 0052 0022     		movs	r2, #0
 342 0054 1A70     		strb	r2, [r3]
 304:Core/Src/main.c ****     }
 343              		.loc 1 304 7 is_stmt 1 view .LVU94
 304:Core/Src/main.c ****     }
 344              		.loc 1 304 13 is_stmt 0 view .LVU95
 345 0056 044A     		ldr	r2, .L17+8
 346 0058 1388     		ldrh	r3, [r2]
 347 005a 0133     		adds	r3, r3, #1
 348 005c 1380     		strh	r3, [r2]	@ movhi
 349 005e F0E7     		b	.L7
 350              	.L18:
 351              		.align	2
ARM GAS  /tmp/ccrGErMp.s 			page 13


 352              	.L17:
 353 0060 000C0140 		.word	1073810432
 354 0064 00000000 		.word	counter.1
 355 0068 00000000 		.word	column.0
 356 006c 00080140 		.word	1073809408
 357 0070 00000000 		.word	font
 358              	.LBE9:
 359              		.cfi_endproc
 360              	.LFE70:
 362              		.section	.text.Error_Handler,"ax",%progbits
 363              		.align	1
 364              		.global	Error_Handler
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 369              	Error_Handler:
 370              	.LFB71:
 312:Core/Src/main.c **** /* USER CODE END 4 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** /**
 315:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 316:Core/Src/main.c ****   * @retval None
 317:Core/Src/main.c ****   */
 318:Core/Src/main.c **** void Error_Handler(void)
 319:Core/Src/main.c **** {
 371              		.loc 1 319 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ Volatile: function does not return.
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 320:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 321:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 322:Core/Src/main.c ****   __disable_irq();
 377              		.loc 1 322 3 view .LVU97
 378              	.LBB10:
 379              	.LBI10:
 380              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/ccrGErMp.s 			page 14


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /tmp/ccrGErMp.s 			page 15


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccrGErMp.s 			page 16


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 381              		.loc 2 140 27 view .LVU98
 382              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 383              		.loc 2 142 3 view .LVU99
 384              		.syntax unified
 385              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 386 0000 72B6     		cpsid i
 387              	@ 0 "" 2
 388              		.thumb
 389              		.syntax unified
 390              	.L20:
 391              	.LBE11:
 392              	.LBE10:
 323:Core/Src/main.c ****   while (1)
 393              		.loc 1 323 3 view .LVU100
 324:Core/Src/main.c ****   {
 325:Core/Src/main.c ****   }
 394              		.loc 1 325 3 view .LVU101
 323:Core/Src/main.c ****   while (1)
 395              		.loc 1 323 9 view .LVU102
 396 0002 FEE7     		b	.L20
 397              		.cfi_endproc
 398              	.LFE71:
 400              		.section	.text.MX_TIM2_Init,"ax",%progbits
 401              		.align	1
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 406              	MX_TIM2_Init:
 407              	.LFB68:
 167:Core/Src/main.c **** 
 408              		.loc 1 167 1 view -0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 56
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412 0000 00B5     		push	{lr}
 413              	.LCFI5:
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 14, -4
 416 0002 8FB0     		sub	sp, sp, #60
 417              	.LCFI6:
 418              		.cfi_def_cfa_offset 64
 173:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 419              		.loc 1 173 3 view .LVU104
 173:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 420              		.loc 1 173 26 is_stmt 0 view .LVU105
 421 0004 0023     		movs	r3, #0
 422 0006 0A93     		str	r3, [sp, #40]
 423 0008 0B93     		str	r3, [sp, #44]
ARM GAS  /tmp/ccrGErMp.s 			page 17


 424 000a 0C93     		str	r3, [sp, #48]
 425 000c 0D93     		str	r3, [sp, #52]
 174:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 426              		.loc 1 174 3 is_stmt 1 view .LVU106
 174:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 427              		.loc 1 174 27 is_stmt 0 view .LVU107
 428 000e 0893     		str	r3, [sp, #32]
 429 0010 0993     		str	r3, [sp, #36]
 175:Core/Src/main.c **** 
 430              		.loc 1 175 3 is_stmt 1 view .LVU108
 175:Core/Src/main.c **** 
 431              		.loc 1 175 22 is_stmt 0 view .LVU109
 432 0012 0193     		str	r3, [sp, #4]
 433 0014 0293     		str	r3, [sp, #8]
 434 0016 0393     		str	r3, [sp, #12]
 435 0018 0493     		str	r3, [sp, #16]
 436 001a 0593     		str	r3, [sp, #20]
 437 001c 0693     		str	r3, [sp, #24]
 438 001e 0793     		str	r3, [sp, #28]
 180:Core/Src/main.c ****   htim2.Init.Prescaler = 7199;
 439              		.loc 1 180 3 is_stmt 1 view .LVU110
 180:Core/Src/main.c ****   htim2.Init.Prescaler = 7199;
 440              		.loc 1 180 18 is_stmt 0 view .LVU111
 441 0020 2048     		ldr	r0, .L35
 442 0022 4FF08042 		mov	r2, #1073741824
 443 0026 0260     		str	r2, [r0]
 181:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 444              		.loc 1 181 3 is_stmt 1 view .LVU112
 181:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 445              		.loc 1 181 24 is_stmt 0 view .LVU113
 446 0028 41F61F42 		movw	r2, #7199
 447 002c 4260     		str	r2, [r0, #4]
 182:Core/Src/main.c ****   htim2.Init.Period = 10000;
 448              		.loc 1 182 3 is_stmt 1 view .LVU114
 182:Core/Src/main.c ****   htim2.Init.Period = 10000;
 449              		.loc 1 182 26 is_stmt 0 view .LVU115
 450 002e 8360     		str	r3, [r0, #8]
 183:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 451              		.loc 1 183 3 is_stmt 1 view .LVU116
 183:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 452              		.loc 1 183 21 is_stmt 0 view .LVU117
 453 0030 42F21072 		movw	r2, #10000
 454 0034 C260     		str	r2, [r0, #12]
 184:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 455              		.loc 1 184 3 is_stmt 1 view .LVU118
 184:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 456              		.loc 1 184 28 is_stmt 0 view .LVU119
 457 0036 0361     		str	r3, [r0, #16]
 185:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 458              		.loc 1 185 3 is_stmt 1 view .LVU120
 185:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 459              		.loc 1 185 32 is_stmt 0 view .LVU121
 460 0038 8361     		str	r3, [r0, #24]
 186:Core/Src/main.c ****   {
 461              		.loc 1 186 3 is_stmt 1 view .LVU122
 186:Core/Src/main.c ****   {
 462              		.loc 1 186 7 is_stmt 0 view .LVU123
ARM GAS  /tmp/ccrGErMp.s 			page 18


 463 003a FFF7FEFF 		bl	HAL_TIM_Base_Init
 464              	.LVL14:
 186:Core/Src/main.c ****   {
 465              		.loc 1 186 6 discriminator 1 view .LVU124
 466 003e 28BB     		cbnz	r0, .L29
 190:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 467              		.loc 1 190 3 is_stmt 1 view .LVU125
 190:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 468              		.loc 1 190 34 is_stmt 0 view .LVU126
 469 0040 4FF48053 		mov	r3, #4096
 470 0044 0A93     		str	r3, [sp, #40]
 191:Core/Src/main.c ****   {
 471              		.loc 1 191 3 is_stmt 1 view .LVU127
 191:Core/Src/main.c ****   {
 472              		.loc 1 191 7 is_stmt 0 view .LVU128
 473 0046 0AA9     		add	r1, sp, #40
 474 0048 1648     		ldr	r0, .L35
 475 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 476              	.LVL15:
 191:Core/Src/main.c ****   {
 477              		.loc 1 191 6 discriminator 1 view .LVU129
 478 004e F8B9     		cbnz	r0, .L30
 195:Core/Src/main.c ****   {
 479              		.loc 1 195 3 is_stmt 1 view .LVU130
 195:Core/Src/main.c ****   {
 480              		.loc 1 195 7 is_stmt 0 view .LVU131
 481 0050 1448     		ldr	r0, .L35
 482 0052 FFF7FEFF 		bl	HAL_TIM_OC_Init
 483              	.LVL16:
 195:Core/Src/main.c ****   {
 484              		.loc 1 195 6 discriminator 1 view .LVU132
 485 0056 E8B9     		cbnz	r0, .L31
 199:Core/Src/main.c ****   {
 486              		.loc 1 199 3 is_stmt 1 view .LVU133
 199:Core/Src/main.c ****   {
 487              		.loc 1 199 7 is_stmt 0 view .LVU134
 488 0058 0821     		movs	r1, #8
 489 005a 1248     		ldr	r0, .L35
 490 005c FFF7FEFF 		bl	HAL_TIM_OnePulse_Init
 491              	.LVL17:
 199:Core/Src/main.c ****   {
 492              		.loc 1 199 6 discriminator 1 view .LVU135
 493 0060 D0B9     		cbnz	r0, .L32
 203:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 494              		.loc 1 203 3 is_stmt 1 view .LVU136
 203:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 495              		.loc 1 203 37 is_stmt 0 view .LVU137
 496 0062 0023     		movs	r3, #0
 497 0064 0893     		str	r3, [sp, #32]
 204:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 498              		.loc 1 204 3 is_stmt 1 view .LVU138
 204:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 499              		.loc 1 204 33 is_stmt 0 view .LVU139
 500 0066 0993     		str	r3, [sp, #36]
 205:Core/Src/main.c ****   {
 501              		.loc 1 205 3 is_stmt 1 view .LVU140
 205:Core/Src/main.c ****   {
ARM GAS  /tmp/ccrGErMp.s 			page 19


 502              		.loc 1 205 7 is_stmt 0 view .LVU141
 503 0068 08A9     		add	r1, sp, #32
 504 006a 0E48     		ldr	r0, .L35
 505 006c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 506              	.LVL18:
 205:Core/Src/main.c ****   {
 507              		.loc 1 205 6 discriminator 1 view .LVU142
 508 0070 A0B9     		cbnz	r0, .L33
 209:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 509              		.loc 1 209 3 is_stmt 1 view .LVU143
 209:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 510              		.loc 1 209 20 is_stmt 0 view .LVU144
 511 0072 0022     		movs	r2, #0
 512 0074 0192     		str	r2, [sp, #4]
 210:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 513              		.loc 1 210 3 is_stmt 1 view .LVU145
 210:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 514              		.loc 1 210 19 is_stmt 0 view .LVU146
 515 0076 0292     		str	r2, [sp, #8]
 211:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 516              		.loc 1 211 3 is_stmt 1 view .LVU147
 211:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 517              		.loc 1 211 24 is_stmt 0 view .LVU148
 518 0078 0392     		str	r2, [sp, #12]
 212:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 519              		.loc 1 212 3 is_stmt 1 view .LVU149
 212:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 520              		.loc 1 212 24 is_stmt 0 view .LVU150
 521 007a 0592     		str	r2, [sp, #20]
 213:Core/Src/main.c ****   {
 522              		.loc 1 213 3 is_stmt 1 view .LVU151
 213:Core/Src/main.c ****   {
 523              		.loc 1 213 7 is_stmt 0 view .LVU152
 524 007c 01A9     		add	r1, sp, #4
 525 007e 0948     		ldr	r0, .L35
 526 0080 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 527              	.LVL19:
 213:Core/Src/main.c ****   {
 528              		.loc 1 213 6 discriminator 1 view .LVU153
 529 0084 60B9     		cbnz	r0, .L34
 221:Core/Src/main.c **** 
 530              		.loc 1 221 1 view .LVU154
 531 0086 0FB0     		add	sp, sp, #60
 532              	.LCFI7:
 533              		.cfi_remember_state
 534              		.cfi_def_cfa_offset 4
 535              		@ sp needed
 536 0088 5DF804FB 		ldr	pc, [sp], #4
 537              	.L29:
 538              	.LCFI8:
 539              		.cfi_restore_state
 188:Core/Src/main.c ****   }
 540              		.loc 1 188 5 is_stmt 1 view .LVU155
 541 008c FFF7FEFF 		bl	Error_Handler
 542              	.LVL20:
 543              	.L30:
 193:Core/Src/main.c ****   }
ARM GAS  /tmp/ccrGErMp.s 			page 20


 544              		.loc 1 193 5 view .LVU156
 545 0090 FFF7FEFF 		bl	Error_Handler
 546              	.LVL21:
 547              	.L31:
 197:Core/Src/main.c ****   }
 548              		.loc 1 197 5 view .LVU157
 549 0094 FFF7FEFF 		bl	Error_Handler
 550              	.LVL22:
 551              	.L32:
 201:Core/Src/main.c ****   }
 552              		.loc 1 201 5 view .LVU158
 553 0098 FFF7FEFF 		bl	Error_Handler
 554              	.LVL23:
 555              	.L33:
 207:Core/Src/main.c ****   }
 556              		.loc 1 207 5 view .LVU159
 557 009c FFF7FEFF 		bl	Error_Handler
 558              	.LVL24:
 559              	.L34:
 215:Core/Src/main.c ****   }
 560              		.loc 1 215 5 view .LVU160
 561 00a0 FFF7FEFF 		bl	Error_Handler
 562              	.LVL25:
 563              	.L36:
 564              		.align	2
 565              	.L35:
 566 00a4 00000000 		.word	htim2
 567              		.cfi_endproc
 568              	.LFE68:
 570              		.section	.text.SystemClock_Config,"ax",%progbits
 571              		.align	1
 572              		.global	SystemClock_Config
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 577              	SystemClock_Config:
 578              	.LFB66:
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 579              		.loc 1 116 1 view -0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 64
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583 0000 00B5     		push	{lr}
 584              	.LCFI9:
 585              		.cfi_def_cfa_offset 4
 586              		.cfi_offset 14, -4
 587 0002 91B0     		sub	sp, sp, #68
 588              	.LCFI10:
 589              		.cfi_def_cfa_offset 72
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 590              		.loc 1 117 3 view .LVU162
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 591              		.loc 1 117 22 is_stmt 0 view .LVU163
 592 0004 2822     		movs	r2, #40
 593 0006 0021     		movs	r1, #0
 594 0008 06A8     		add	r0, sp, #24
 595 000a FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccrGErMp.s 			page 21


 596              	.LVL26:
 118:Core/Src/main.c **** 
 597              		.loc 1 118 3 is_stmt 1 view .LVU164
 118:Core/Src/main.c **** 
 598              		.loc 1 118 22 is_stmt 0 view .LVU165
 599 000e 0023     		movs	r3, #0
 600 0010 0193     		str	r3, [sp, #4]
 601 0012 0293     		str	r3, [sp, #8]
 602 0014 0393     		str	r3, [sp, #12]
 603 0016 0493     		str	r3, [sp, #16]
 604 0018 0593     		str	r3, [sp, #20]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 605              		.loc 1 123 3 is_stmt 1 view .LVU166
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 606              		.loc 1 123 36 is_stmt 0 view .LVU167
 607 001a 0122     		movs	r2, #1
 608 001c 0692     		str	r2, [sp, #24]
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 609              		.loc 1 124 3 is_stmt 1 view .LVU168
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 610              		.loc 1 124 30 is_stmt 0 view .LVU169
 611 001e 4FF48033 		mov	r3, #65536
 612 0022 0793     		str	r3, [sp, #28]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 613              		.loc 1 125 3 is_stmt 1 view .LVU170
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 614              		.loc 1 126 3 view .LVU171
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 615              		.loc 1 126 30 is_stmt 0 view .LVU172
 616 0024 0A92     		str	r2, [sp, #40]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 617              		.loc 1 127 3 is_stmt 1 view .LVU173
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 618              		.loc 1 127 34 is_stmt 0 view .LVU174
 619 0026 0222     		movs	r2, #2
 620 0028 0D92     		str	r2, [sp, #52]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 621              		.loc 1 128 3 is_stmt 1 view .LVU175
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 622              		.loc 1 128 35 is_stmt 0 view .LVU176
 623 002a 0E93     		str	r3, [sp, #56]
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 624              		.loc 1 129 3 is_stmt 1 view .LVU177
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 625              		.loc 1 129 32 is_stmt 0 view .LVU178
 626 002c 4FF4E013 		mov	r3, #1835008
 627 0030 0F93     		str	r3, [sp, #60]
 130:Core/Src/main.c ****   {
 628              		.loc 1 130 3 is_stmt 1 view .LVU179
 130:Core/Src/main.c ****   {
 629              		.loc 1 130 7 is_stmt 0 view .LVU180
 630 0032 06A8     		add	r0, sp, #24
 631 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 632              	.LVL27:
 130:Core/Src/main.c ****   {
 633              		.loc 1 130 6 discriminator 1 view .LVU181
 634 0038 80B9     		cbnz	r0, .L41
ARM GAS  /tmp/ccrGErMp.s 			page 22


 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 635              		.loc 1 137 3 is_stmt 1 view .LVU182
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 636              		.loc 1 137 31 is_stmt 0 view .LVU183
 637 003a 0F23     		movs	r3, #15
 638 003c 0193     		str	r3, [sp, #4]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 639              		.loc 1 139 3 is_stmt 1 view .LVU184
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 640              		.loc 1 139 34 is_stmt 0 view .LVU185
 641 003e 0221     		movs	r1, #2
 642 0040 0291     		str	r1, [sp, #8]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 643              		.loc 1 140 3 is_stmt 1 view .LVU186
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 644              		.loc 1 140 35 is_stmt 0 view .LVU187
 645 0042 0023     		movs	r3, #0
 646 0044 0393     		str	r3, [sp, #12]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 647              		.loc 1 141 3 is_stmt 1 view .LVU188
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 648              		.loc 1 141 36 is_stmt 0 view .LVU189
 649 0046 4FF48062 		mov	r2, #1024
 650 004a 0492     		str	r2, [sp, #16]
 142:Core/Src/main.c **** 
 651              		.loc 1 142 3 is_stmt 1 view .LVU190
 142:Core/Src/main.c **** 
 652              		.loc 1 142 36 is_stmt 0 view .LVU191
 653 004c 0593     		str	r3, [sp, #20]
 144:Core/Src/main.c ****   {
 654              		.loc 1 144 3 is_stmt 1 view .LVU192
 144:Core/Src/main.c ****   {
 655              		.loc 1 144 7 is_stmt 0 view .LVU193
 656 004e 01A8     		add	r0, sp, #4
 657 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 658              	.LVL28:
 144:Core/Src/main.c ****   {
 659              		.loc 1 144 6 discriminator 1 view .LVU194
 660 0054 20B9     		cbnz	r0, .L42
 148:Core/Src/main.c **** 
 661              		.loc 1 148 1 view .LVU195
 662 0056 11B0     		add	sp, sp, #68
 663              	.LCFI11:
 664              		.cfi_remember_state
 665              		.cfi_def_cfa_offset 4
 666              		@ sp needed
 667 0058 5DF804FB 		ldr	pc, [sp], #4
 668              	.L41:
 669              	.LCFI12:
 670              		.cfi_restore_state
 132:Core/Src/main.c ****   }
 671              		.loc 1 132 5 is_stmt 1 view .LVU196
 672 005c FFF7FEFF 		bl	Error_Handler
 673              	.LVL29:
 674              	.L42:
 146:Core/Src/main.c ****   }
 675              		.loc 1 146 5 view .LVU197
ARM GAS  /tmp/ccrGErMp.s 			page 23


 676 0060 FFF7FEFF 		bl	Error_Handler
 677              	.LVL30:
 678              		.cfi_endproc
 679              	.LFE66:
 681              		.section	.text.main,"ax",%progbits
 682              		.align	1
 683              		.global	main
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 688              	main:
 689              	.LFB65:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 690              		.loc 1 69 1 view -0
 691              		.cfi_startproc
 692              		@ Volatile: function does not return.
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695 0000 08B5     		push	{r3, lr}
 696              	.LCFI13:
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 3, -8
 699              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 700              		.loc 1 77 3 view .LVU199
 701 0002 FFF7FEFF 		bl	HAL_Init
 702              	.LVL31:
  84:Core/Src/main.c **** 
 703              		.loc 1 84 3 view .LVU200
 704 0006 FFF7FEFF 		bl	SystemClock_Config
 705              	.LVL32:
  91:Core/Src/main.c ****   MX_TIM2_Init();
 706              		.loc 1 91 3 view .LVU201
 707 000a FFF7FEFF 		bl	MX_GPIO_Init
 708              	.LVL33:
  92:Core/Src/main.c **** 
 709              		.loc 1 92 3 view .LVU202
 710 000e FFF7FEFF 		bl	MX_TIM2_Init
 711              	.LVL34:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 712              		.loc 1 95 3 view .LVU203
 713 0012 FFF7FEFF 		bl	MX_NVIC_Init
 714              	.LVL35:
 715              	.L44:
 102:Core/Src/main.c ****   {
 716              		.loc 1 102 3 view .LVU204
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 717              		.loc 1 107 3 view .LVU205
 102:Core/Src/main.c ****   {
 718              		.loc 1 102 9 view .LVU206
 719 0016 FEE7     		b	.L44
 720              		.cfi_endproc
 721              	.LFE65:
 723              		.section	.bss.column.0,"aw",%nobits
 724              		.align	1
 727              	column.0:
 728 0000 0000     		.space	2
ARM GAS  /tmp/ccrGErMp.s 			page 24


 729              		.section	.bss.counter.1,"aw",%nobits
 732              	counter.1:
 733 0000 00       		.space	1
 734              		.global	htim2
 735              		.section	.bss.htim2,"aw",%nobits
 736              		.align	2
 739              	htim2:
 740 0000 00000000 		.space	72
 740      00000000 
 740      00000000 
 740      00000000 
 740      00000000 
 741              		.global	font
 742              		.section	.rodata.font,"a"
 743              		.align	2
 746              	font:
 747 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000_\000\000\000\000\003"
 747      00000000 
 747      5F000000 
 747      0003
 748 000e 00030000 		.ascii	"\000\003\000\000\024\177\024\177\024\000$*\177*\022"
 748      147F147F 
 748      1400242A 
 748      7F2A12
 749 001d 00231308 		.ascii	"\000#\023\010db\0006IU\"P\000\000\005\003\000\000\000"
 749      64620036 
 749      49552250 
 749      00000503 
 749      000000
 750 0030 001C2241 		.ascii	"\000\034\"A\000\000\000A\"\034\000\000\024\010>\010"
 750      00000041 
 750      221C0000 
 750      14083E08 
 751 0040 14000808 		.ascii	"\024\000\010\010>\010\010\000\000P0\000\000\000\000"
 751      3E080800 
 751      00503000 
 751      000000
 752 004f 08080808 		.ascii	"\010\010\010\010\000\000``\000\000\000\000`\030\006"
 752      00006060 
 752      00000000 
 752      601806
 753 005e 00003E51 		.ascii	"\000\000>QIE>\000\000B\177@\000\000BaQIF\000\"AII6\000"
 753      49453E00 
 753      00427F40 
 753      00004261 
 753      51494600 
 754 0078 1814127F 		.ascii	"\030\024\022\177\020\000'EEE9\000<JII0\000\001\001q"
 754      10002745 
 754      45453900 
 754      3C4A4949 
 754      30000101 
 755 008d 09070036 		.ascii	"\011\007\0006III6\000\006II)\036\000\00066\000\000\000"
 755      49494936 
 755      00064949 
 755      291E0000 
 755      36360000 
 756 00a2 00563600 		.ascii	"\000V6\000\000\000\000\010\024\"A\000\000\024\024\024"
ARM GAS  /tmp/ccrGErMp.s 			page 25


 756      00000008 
 756      14224100 
 756      00141414 
 757 00b2 14000041 		.ascii	"\024\000\000A\"\024\010\000\002\001Q\011\006\000>A]"
 757      22140800 
 757      02015109 
 757      06003E41 
 757      5D
 758 00c3 555E007C 		.ascii	"U^\000|\022\021\022|\000\177III6\000>AAA\"\000\177A"
 758      1211127C 
 758      007F4949 
 758      4936003E 
 758      41414122 
 759 00da 41413E00 		.ascii	"AA>\000\177IIIA\000\177\011\011\011\001\000>AAI:\000"
 759      7F494949 
 759      41007F09 
 759      09090100 
 759      3E414149 
 760 00f0 7F080808 		.ascii	"\177\010\010\010\177\000\000A\177A\000\000 @A?\001\000"
 760      7F000041 
 760      7F410000 
 760      2040413F 
 760      0100
 761 0102 7F081422 		.ascii	"\177\010\024\"A\000\177@@@@\000\177\002\014\002\177"
 761      41007F40 
 761      40404000 
 761      7F020C02 
 761      7F
 762 0113 007F0408 		.ascii	"\000\177\004\010\020\177\000>AAA>\000\177\011\011\011"
 762      107F003E 
 762      4141413E 
 762      007F0909 
 762      09
 763 0124 06003E41 		.ascii	"\006\000>AQ!^\000\177\011\011\011v\000&III2\000\001"
 763      51215E00 
 763      7F090909 
 763      76002649 
 763      49493200 
 764 0139 017F0101 		.ascii	"\001\177\001\001\000?@@@?\000\037 @ \037\000?@8@?\000"
 764      003F4040 
 764      403F001F 
 764      2040201F 
 764      003F4038 
 765 0150 63140814 		.ascii	"c\024\010\024c\000\007\010p\010\007\000aQIEC\000\000"
 765      63000708 
 765      70080700 
 765      61514945 
 765      430000
 766 0163 7F414100 		.ascii	"\177AA\000\000\000\006\030`\000\000\000AA\177\000\000"
 766      00000618 
 766      60000000 
 766      41417F00 
 766      00
 767 0174 04020102 		.ascii	"\004\002\001\002\004\000@@@@@\000\000\001\002\004\000"
 767      04004040 
 767      40404000 
 767      00010204 
ARM GAS  /tmp/ccrGErMp.s 			page 26


 767      00
 768 0185 00205454 		.ascii	"\000 TTTx\000\177HDD8\0008DDD(\0008DDH\177\0008TTT\030"
 768      5478007F 
 768      48444438 
 768      00384444 
 768      44280038 
 769 01a3 00087E09 		.ascii	"\000\010~\011\001\002\000\014RRR>\000\177\010\004\004"
 769      0102000C 
 769      5252523E 
 769      007F0804 
 769      04
 770 01b4 78000044 		.ascii	"x\000\000D}@\000\000 @D=\000\000\000\177\020(D\000\000"
 770      7D400000 
 770      2040443D 
 770      0000007F 
 770      10284400 
 771 01c9 417F4000 		.ascii	"A\177@\000\000|\004\030\004x\000|\010\004\004x\0008"
 771      007C0418 
 771      0478007C 
 771      08040478 
 771      0038
 772 01db 44444438 		.ascii	"DDD8\000|$$$\030\000\030$$$|\000|\010\004\004\010\000"
 772      007C2424 
 772      24180018 
 772      2424247C 
 772      007C0804 
 773 01f2 48545454 		.ascii	"HTTT \000\004?D@ \000<@@ |\000\034 @ \034\000<@8@<\000"
 773      2000043F 
 773      44402000 
 773      3C404020 
 773      7C001C20 
 774 0210 44281028 		.ascii	"D(\020(D\000\014PPP<\000DdTLD\000\000\0106A\000\000"
 774      44000C50 
 774      50503C00 
 774      4464544C 
 774      44000008 
 775 0228 0000FF00 		.ascii	"\000\000\377\000\000\000\000A6\010\000\000\010\004\014"
 775      00000041 
 775      36080000 
 775      08040C
 776 0237 080400FE 		.ascii	"\010\004\000\376\376\000\000\000\000"
 776      FE000000 
 776      00
 777              		.text
 778              	.Letext0:
 779              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 780              		.file 4 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 781              		.file 5 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 782              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 783              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 784              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 785              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 786              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 787              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 788              		.file 12 "Core/Inc/PrinterFont.h"
 789              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 790              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
ARM GAS  /tmp/ccrGErMp.s 			page 27


 791              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 792              		.file 16 "<built-in>"
ARM GAS  /tmp/ccrGErMp.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccrGErMp.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccrGErMp.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccrGErMp.s:203    .text.MX_GPIO_Init:000000d4 $d
     /tmp/ccrGErMp.s:212    .text.MX_NVIC_Init:00000000 $t
     /tmp/ccrGErMp.s:217    .text.MX_NVIC_Init:00000000 MX_NVIC_Init
     /tmp/ccrGErMp.s:244    .text.HAL_GPIO_EXTI_Callback:00000000 $t
     /tmp/ccrGErMp.s:250    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
     /tmp/ccrGErMp.s:353    .text.HAL_GPIO_EXTI_Callback:00000060 $d
     /tmp/ccrGErMp.s:732    .bss.counter.1:00000000 counter.1
     /tmp/ccrGErMp.s:727    .bss.column.0:00000000 column.0
     /tmp/ccrGErMp.s:746    .rodata.font:00000000 font
     /tmp/ccrGErMp.s:363    .text.Error_Handler:00000000 $t
     /tmp/ccrGErMp.s:369    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccrGErMp.s:401    .text.MX_TIM2_Init:00000000 $t
     /tmp/ccrGErMp.s:406    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
     /tmp/ccrGErMp.s:566    .text.MX_TIM2_Init:000000a4 $d
     /tmp/ccrGErMp.s:739    .bss.htim2:00000000 htim2
     /tmp/ccrGErMp.s:571    .text.SystemClock_Config:00000000 $t
     /tmp/ccrGErMp.s:577    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccrGErMp.s:682    .text.main:00000000 $t
     /tmp/ccrGErMp.s:688    .text.main:00000000 main
     /tmp/ccrGErMp.s:724    .bss.column.0:00000000 $d
     /tmp/ccrGErMp.s:733    .bss.counter.1:00000000 $d
     /tmp/ccrGErMp.s:736    .bss.htim2:00000000 $d
     /tmp/ccrGErMp.s:743    .rodata.font:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_ReadPin
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIM_OnePulse_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
