ARM GAS  /tmp/ccEJjn6T.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB69:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccEJjn6T.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_TIM2_Init(void);
  53:Core/Src/main.c **** static void MX_NVIC_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****   * @brief  The application entry point.
  65:Core/Src/main.c ****   * @retval int
  66:Core/Src/main.c ****   */
  67:Core/Src/main.c **** int main(void)
  68:Core/Src/main.c **** {
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Core/Src/main.c ****   HAL_Init();
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Configure the system clock */
  83:Core/Src/main.c ****   SystemClock_Config();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Initialize all configured peripherals */
  90:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  /tmp/ccEJjn6T.s 			page 3


  91:Core/Src/main.c ****   MX_TIM2_Init();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Initialize interrupts */
  94:Core/Src/main.c ****   MX_NVIC_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Infinite loop */
 100:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 101:Core/Src/main.c ****   while (1)
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief System Clock Configuration
 112:Core/Src/main.c ****   * @retval None
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** void SystemClock_Config(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 120:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****     Error_Handler();
 132:Core/Src/main.c ****   }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     Error_Handler();
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c **** }
ARM GAS  /tmp/ccEJjn6T.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** /**
 150:Core/Src/main.c ****   * @brief NVIC Configuration.
 151:Core/Src/main.c ****   * @retval None
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c **** static void MX_NVIC_Init(void)
 154:Core/Src/main.c **** {
 155:Core/Src/main.c ****   /* EXTI15_10_IRQn interrupt configuration */
 156:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 157:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 158:Core/Src/main.c **** }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /**
 161:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 162:Core/Src/main.c ****   * @param None
 163:Core/Src/main.c ****   * @retval None
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** static void MX_TIM2_Init(void)
 166:Core/Src/main.c **** {
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 173:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 174:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 179:Core/Src/main.c ****   htim2.Instance = TIM2;
 180:Core/Src/main.c ****   htim2.Init.Prescaler = 7199;
 181:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 182:Core/Src/main.c ****   htim2.Init.Period = 10000;
 183:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 184:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 185:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 186:Core/Src/main.c ****   {
 187:Core/Src/main.c ****     Error_Handler();
 188:Core/Src/main.c ****   }
 189:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 190:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     Error_Handler();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   if (HAL_TIM_OnePulse_Init(&htim2, TIM_OPMODE_SINGLE) != HAL_OK)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 203:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 204:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
ARM GAS  /tmp/ccEJjn6T.s 			page 5


 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 209:Core/Src/main.c ****   sConfigOC.Pulse = 75;
 210:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 211:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 212:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****     Error_Handler();
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 219:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** }
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /**
 224:Core/Src/main.c ****   * @brief GPIO Initialization Function
 225:Core/Src/main.c ****   * @param None
 226:Core/Src/main.c ****   * @retval None
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c **** static void MX_GPIO_Init(void)
 229:Core/Src/main.c **** {
  26              		.loc 1 229 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 230:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 230 3 view .LVU1
  41              		.loc 1 230 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0494     		str	r4, [sp, #16]
  44 0008 0594     		str	r4, [sp, #20]
  45 000a 0694     		str	r4, [sp, #24]
  46 000c 0794     		str	r4, [sp, #28]
 231:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 232:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 235:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 235 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 235 3 view .LVU4
  50              		.loc 1 235 3 view .LVU5
  51 000e 224B     		ldr	r3, .L3
ARM GAS  /tmp/ccEJjn6T.s 			page 6


  52 0010 9A69     		ldr	r2, [r3, #24]
  53 0012 42F01002 		orr	r2, r2, #16
  54 0016 9A61     		str	r2, [r3, #24]
  55              		.loc 1 235 3 view .LVU6
  56 0018 9A69     		ldr	r2, [r3, #24]
  57 001a 02F01002 		and	r2, r2, #16
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 235 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 235 3 view .LVU8
 236:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  63              		.loc 1 236 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 236 3 view .LVU10
  66              		.loc 1 236 3 view .LVU11
  67 0022 9A69     		ldr	r2, [r3, #24]
  68 0024 42F02002 		orr	r2, r2, #32
  69 0028 9A61     		str	r2, [r3, #24]
  70              		.loc 1 236 3 view .LVU12
  71 002a 9A69     		ldr	r2, [r3, #24]
  72 002c 02F02002 		and	r2, r2, #32
  73 0030 0192     		str	r2, [sp, #4]
  74              		.loc 1 236 3 view .LVU13
  75 0032 019A     		ldr	r2, [sp, #4]
  76              	.LBE5:
  77              		.loc 1 236 3 view .LVU14
 237:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  78              		.loc 1 237 3 view .LVU15
  79              	.LBB6:
  80              		.loc 1 237 3 view .LVU16
  81              		.loc 1 237 3 view .LVU17
  82 0034 9A69     		ldr	r2, [r3, #24]
  83 0036 42F00802 		orr	r2, r2, #8
  84 003a 9A61     		str	r2, [r3, #24]
  85              		.loc 1 237 3 view .LVU18
  86 003c 9A69     		ldr	r2, [r3, #24]
  87 003e 02F00802 		and	r2, r2, #8
  88 0042 0292     		str	r2, [sp, #8]
  89              		.loc 1 237 3 view .LVU19
  90 0044 029A     		ldr	r2, [sp, #8]
  91              	.LBE6:
  92              		.loc 1 237 3 view .LVU20
 238:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  93              		.loc 1 238 3 view .LVU21
  94              	.LBB7:
  95              		.loc 1 238 3 view .LVU22
  96              		.loc 1 238 3 view .LVU23
  97 0046 9A69     		ldr	r2, [r3, #24]
  98 0048 42F00402 		orr	r2, r2, #4
  99 004c 9A61     		str	r2, [r3, #24]
 100              		.loc 1 238 3 view .LVU24
 101 004e 9B69     		ldr	r3, [r3, #24]
 102 0050 03F00403 		and	r3, r3, #4
 103 0054 0393     		str	r3, [sp, #12]
 104              		.loc 1 238 3 view .LVU25
 105 0056 039B     		ldr	r3, [sp, #12]
ARM GAS  /tmp/ccEJjn6T.s 			page 7


 106              	.LBE7:
 107              		.loc 1 238 3 view .LVU26
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 241:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED_Pin|MTR_Pin, GPIO_PIN_RESET);
 108              		.loc 1 241 3 view .LVU27
 109 0058 104E     		ldr	r6, .L3+4
 110 005a 2246     		mov	r2, r4
 111 005c 4FF42041 		mov	r1, #40960
 112 0060 3046     		mov	r0, r6
 113 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL0:
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /*Configure GPIO pins : LED_Pin MTR_Pin */
 244:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin|MTR_Pin;
 115              		.loc 1 244 3 view .LVU28
 116              		.loc 1 244 23 is_stmt 0 view .LVU29
 117 0066 4FF42043 		mov	r3, #40960
 118 006a 0493     		str	r3, [sp, #16]
 245:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 119              		.loc 1 245 3 is_stmt 1 view .LVU30
 120              		.loc 1 245 24 is_stmt 0 view .LVU31
 121 006c 0125     		movs	r5, #1
 122 006e 0595     		str	r5, [sp, #20]
 246:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 246 3 is_stmt 1 view .LVU32
 124              		.loc 1 246 24 is_stmt 0 view .LVU33
 125 0070 0694     		str	r4, [sp, #24]
 247:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 126              		.loc 1 247 3 is_stmt 1 view .LVU34
 127              		.loc 1 247 25 is_stmt 0 view .LVU35
 128 0072 0223     		movs	r3, #2
 129 0074 0793     		str	r3, [sp, #28]
 248:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 130              		.loc 1 248 3 is_stmt 1 view .LVU36
 131 0076 04A9     		add	r1, sp, #16
 132 0078 3046     		mov	r0, r6
 133 007a FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL1:
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /*Configure GPIO pin : OPTO_Pin */
 251:Core/Src/main.c ****   GPIO_InitStruct.Pin = OPTO_Pin;
 135              		.loc 1 251 3 view .LVU37
 136              		.loc 1 251 23 is_stmt 0 view .LVU38
 137 007e 4FF40063 		mov	r3, #2048
 138 0082 0493     		str	r3, [sp, #16]
 252:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 139              		.loc 1 252 3 is_stmt 1 view .LVU39
 140              		.loc 1 252 24 is_stmt 0 view .LVU40
 141 0084 064B     		ldr	r3, .L3+8
 142 0086 0593     		str	r3, [sp, #20]
 253:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 143              		.loc 1 253 3 is_stmt 1 view .LVU41
 144              		.loc 1 253 24 is_stmt 0 view .LVU42
 145 0088 0695     		str	r5, [sp, #24]
 254:Core/Src/main.c ****   HAL_GPIO_Init(OPTO_GPIO_Port, &GPIO_InitStruct);
 146              		.loc 1 254 3 is_stmt 1 view .LVU43
ARM GAS  /tmp/ccEJjn6T.s 			page 8


 147 008a 04A9     		add	r1, sp, #16
 148 008c 0548     		ldr	r0, .L3+12
 149 008e FFF7FEFF 		bl	HAL_GPIO_Init
 150              	.LVL2:
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 257:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 258:Core/Src/main.c **** }
 151              		.loc 1 258 1 is_stmt 0 view .LVU44
 152 0092 08B0     		add	sp, sp, #32
 153              	.LCFI2:
 154              		.cfi_def_cfa_offset 16
 155              		@ sp needed
 156 0094 70BD     		pop	{r4, r5, r6, pc}
 157              	.L4:
 158 0096 00BF     		.align	2
 159              	.L3:
 160 0098 00100240 		.word	1073876992
 161 009c 00100140 		.word	1073811456
 162 00a0 00001110 		.word	269549568
 163 00a4 000C0140 		.word	1073810432
 164              		.cfi_endproc
 165              	.LFE69:
 167              		.section	.text.MX_NVIC_Init,"ax",%progbits
 168              		.align	1
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 173              	MX_NVIC_Init:
 174              	.LFB67:
 154:Core/Src/main.c ****   /* EXTI15_10_IRQn interrupt configuration */
 175              		.loc 1 154 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179 0000 08B5     		push	{r3, lr}
 180              	.LCFI3:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 3, -8
 183              		.cfi_offset 14, -4
 156:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 184              		.loc 1 156 3 view .LVU46
 185 0002 0022     		movs	r2, #0
 186 0004 1146     		mov	r1, r2
 187 0006 2820     		movs	r0, #40
 188 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 189              	.LVL3:
 157:Core/Src/main.c **** }
 190              		.loc 1 157 3 view .LVU47
 191 000c 2820     		movs	r0, #40
 192 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 193              	.LVL4:
 158:Core/Src/main.c **** 
 194              		.loc 1 158 1 is_stmt 0 view .LVU48
 195 0012 08BD     		pop	{r3, pc}
 196              		.cfi_endproc
 197              	.LFE67:
ARM GAS  /tmp/ccEJjn6T.s 			page 9


 199              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 200              		.align	1
 201              		.global	HAL_GPIO_EXTI_Callback
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 206              	HAL_GPIO_EXTI_Callback:
 207              	.LVL5:
 208              	.LFB70:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 261:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 262:Core/Src/main.c **** {
 209              		.loc 1 262 1 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 263:Core/Src/main.c ****   static uint8_t counter = 0;
 213              		.loc 1 263 3 view .LVU50
 264:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_11) {
 214              		.loc 1 264 3 view .LVU51
 215              		.loc 1 264 5 is_stmt 0 view .LVU52
 216 0000 B0F5006F 		cmp	r0, #2048
 217 0004 01D0     		beq	.L14
 265:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 266:Core/Src/main.c ****     counter++;
 267:Core/Src/main.c ****     if(counter >= 10) {
 268:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 269:Core/Src/main.c ****       counter = 0;
 270:Core/Src/main.c ****     }
 271:Core/Src/main.c ****     //HAL_TIM_OnePulse_Start_IT(&htim2, TIM_CHANNEL_3);
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   } else {
 274:Core/Src/main.c ****       __NOP();
 218              		.loc 1 274 7 is_stmt 1 view .LVU53
 219              		.syntax unified
 220              	@ 274 "Core/Src/main.c" 1
 221 0006 00BF     		nop
 222              	@ 0 "" 2
 223              		.thumb
 224              		.syntax unified
 225 0008 7047     		bx	lr
 226              	.L14:
 262:Core/Src/main.c ****   static uint8_t counter = 0;
 227              		.loc 1 262 1 is_stmt 0 view .LVU54
 228 000a 08B5     		push	{r3, lr}
 229              	.LCFI4:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
 265:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 233              		.loc 1 265 5 is_stmt 1 view .LVU55
 234 000c 0022     		movs	r2, #0
 235 000e 4FF40051 		mov	r1, #8192
 236 0012 00F18040 		add	r0, r0, #1073741824
 237              	.LVL6:
 265:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
ARM GAS  /tmp/ccEJjn6T.s 			page 10


 238              		.loc 1 265 5 is_stmt 0 view .LVU56
 239 0016 00F58430 		add	r0, r0, #67584
 240 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL7:
 266:Core/Src/main.c ****     if(counter >= 10) {
 242              		.loc 1 266 5 is_stmt 1 view .LVU57
 266:Core/Src/main.c ****     if(counter >= 10) {
 243              		.loc 1 266 12 is_stmt 0 view .LVU58
 244 001e 094A     		ldr	r2, .L16
 245 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 246 0022 0133     		adds	r3, r3, #1
 247 0024 DBB2     		uxtb	r3, r3
 248 0026 1370     		strb	r3, [r2]
 267:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 249              		.loc 1 267 5 is_stmt 1 view .LVU59
 267:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 250              		.loc 1 267 7 is_stmt 0 view .LVU60
 251 0028 092B     		cmp	r3, #9
 252 002a 00D8     		bhi	.L15
 253              	.L7:
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c **** }
 254              		.loc 1 276 1 view .LVU61
 255 002c 08BD     		pop	{r3, pc}
 256              	.L15:
 268:Core/Src/main.c ****       counter = 0;
 257              		.loc 1 268 7 is_stmt 1 view .LVU62
 258 002e 0122     		movs	r2, #1
 259 0030 4FF40051 		mov	r1, #8192
 260 0034 0448     		ldr	r0, .L16+4
 261 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 262              	.LVL8:
 269:Core/Src/main.c ****     }
 263              		.loc 1 269 7 view .LVU63
 269:Core/Src/main.c ****     }
 264              		.loc 1 269 15 is_stmt 0 view .LVU64
 265 003a 024B     		ldr	r3, .L16
 266 003c 0022     		movs	r2, #0
 267 003e 1A70     		strb	r2, [r3]
 268 0040 F4E7     		b	.L7
 269              	.L17:
 270 0042 00BF     		.align	2
 271              	.L16:
 272 0044 00000000 		.word	counter.0
 273 0048 00100140 		.word	1073811456
 274              		.cfi_endproc
 275              	.LFE70:
 277              		.section	.text.Error_Handler,"ax",%progbits
 278              		.align	1
 279              		.global	Error_Handler
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	Error_Handler:
 285              	.LFB71:
 277:Core/Src/main.c **** /* USER CODE END 4 */
 278:Core/Src/main.c **** 
ARM GAS  /tmp/ccEJjn6T.s 			page 11


 279:Core/Src/main.c **** /**
 280:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 281:Core/Src/main.c ****   * @retval None
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c **** void Error_Handler(void)
 284:Core/Src/main.c **** {
 286              		.loc 1 284 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ Volatile: function does not return.
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 285:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 286:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 287:Core/Src/main.c ****   __disable_irq();
 292              		.loc 1 287 3 view .LVU66
 293              	.LBB8:
 294              	.LBI8:
 295              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccEJjn6T.s 			page 12


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccEJjn6T.s 			page 13


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 296              		.loc 2 140 27 view .LVU67
 297              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 298              		.loc 2 142 3 view .LVU68
 299              		.syntax unified
 300              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 301 0000 72B6     		cpsid i
 302              	@ 0 "" 2
 303              		.thumb
 304              		.syntax unified
 305              	.L19:
ARM GAS  /tmp/ccEJjn6T.s 			page 14


 306              	.LBE9:
 307              	.LBE8:
 288:Core/Src/main.c ****   while (1)
 308              		.loc 1 288 3 view .LVU69
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****   }
 309              		.loc 1 290 3 view .LVU70
 288:Core/Src/main.c ****   while (1)
 310              		.loc 1 288 9 view .LVU71
 311 0002 FEE7     		b	.L19
 312              		.cfi_endproc
 313              	.LFE71:
 315              		.section	.text.MX_TIM2_Init,"ax",%progbits
 316              		.align	1
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 321              	MX_TIM2_Init:
 322              	.LFB68:
 166:Core/Src/main.c **** 
 323              		.loc 1 166 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 56
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 00B5     		push	{lr}
 328              	.LCFI5:
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 14, -4
 331 0002 8FB0     		sub	sp, sp, #60
 332              	.LCFI6:
 333              		.cfi_def_cfa_offset 64
 172:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 334              		.loc 1 172 3 view .LVU73
 172:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 335              		.loc 1 172 26 is_stmt 0 view .LVU74
 336 0004 0023     		movs	r3, #0
 337 0006 0A93     		str	r3, [sp, #40]
 338 0008 0B93     		str	r3, [sp, #44]
 339 000a 0C93     		str	r3, [sp, #48]
 340 000c 0D93     		str	r3, [sp, #52]
 173:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 341              		.loc 1 173 3 is_stmt 1 view .LVU75
 173:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 342              		.loc 1 173 27 is_stmt 0 view .LVU76
 343 000e 0893     		str	r3, [sp, #32]
 344 0010 0993     		str	r3, [sp, #36]
 174:Core/Src/main.c **** 
 345              		.loc 1 174 3 is_stmt 1 view .LVU77
 174:Core/Src/main.c **** 
 346              		.loc 1 174 22 is_stmt 0 view .LVU78
 347 0012 0193     		str	r3, [sp, #4]
 348 0014 0293     		str	r3, [sp, #8]
 349 0016 0393     		str	r3, [sp, #12]
 350 0018 0493     		str	r3, [sp, #16]
 351 001a 0593     		str	r3, [sp, #20]
 352 001c 0693     		str	r3, [sp, #24]
 353 001e 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccEJjn6T.s 			page 15


 179:Core/Src/main.c ****   htim2.Init.Prescaler = 7199;
 354              		.loc 1 179 3 is_stmt 1 view .LVU79
 179:Core/Src/main.c ****   htim2.Init.Prescaler = 7199;
 355              		.loc 1 179 18 is_stmt 0 view .LVU80
 356 0020 2348     		ldr	r0, .L34
 357 0022 4FF08042 		mov	r2, #1073741824
 358 0026 0260     		str	r2, [r0]
 180:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 359              		.loc 1 180 3 is_stmt 1 view .LVU81
 180:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 360              		.loc 1 180 24 is_stmt 0 view .LVU82
 361 0028 41F61F42 		movw	r2, #7199
 362 002c 4260     		str	r2, [r0, #4]
 181:Core/Src/main.c ****   htim2.Init.Period = 10000;
 363              		.loc 1 181 3 is_stmt 1 view .LVU83
 181:Core/Src/main.c ****   htim2.Init.Period = 10000;
 364              		.loc 1 181 26 is_stmt 0 view .LVU84
 365 002e 8360     		str	r3, [r0, #8]
 182:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 366              		.loc 1 182 3 is_stmt 1 view .LVU85
 182:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 367              		.loc 1 182 21 is_stmt 0 view .LVU86
 368 0030 42F21072 		movw	r2, #10000
 369 0034 C260     		str	r2, [r0, #12]
 183:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 370              		.loc 1 183 3 is_stmt 1 view .LVU87
 183:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 371              		.loc 1 183 28 is_stmt 0 view .LVU88
 372 0036 0361     		str	r3, [r0, #16]
 184:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 373              		.loc 1 184 3 is_stmt 1 view .LVU89
 184:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 374              		.loc 1 184 32 is_stmt 0 view .LVU90
 375 0038 8361     		str	r3, [r0, #24]
 185:Core/Src/main.c ****   {
 376              		.loc 1 185 3 is_stmt 1 view .LVU91
 185:Core/Src/main.c ****   {
 377              		.loc 1 185 7 is_stmt 0 view .LVU92
 378 003a FFF7FEFF 		bl	HAL_TIM_Base_Init
 379              	.LVL9:
 185:Core/Src/main.c ****   {
 380              		.loc 1 185 6 discriminator 1 view .LVU93
 381 003e 50BB     		cbnz	r0, .L28
 189:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 382              		.loc 1 189 3 is_stmt 1 view .LVU94
 189:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 383              		.loc 1 189 34 is_stmt 0 view .LVU95
 384 0040 4FF48053 		mov	r3, #4096
 385 0044 0A93     		str	r3, [sp, #40]
 190:Core/Src/main.c ****   {
 386              		.loc 1 190 3 is_stmt 1 view .LVU96
 190:Core/Src/main.c ****   {
 387              		.loc 1 190 7 is_stmt 0 view .LVU97
 388 0046 0AA9     		add	r1, sp, #40
 389 0048 1948     		ldr	r0, .L34
 390 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 391              	.LVL10:
ARM GAS  /tmp/ccEJjn6T.s 			page 16


 190:Core/Src/main.c ****   {
 392              		.loc 1 190 6 discriminator 1 view .LVU98
 393 004e 20BB     		cbnz	r0, .L29
 194:Core/Src/main.c ****   {
 394              		.loc 1 194 3 is_stmt 1 view .LVU99
 194:Core/Src/main.c ****   {
 395              		.loc 1 194 7 is_stmt 0 view .LVU100
 396 0050 1748     		ldr	r0, .L34
 397 0052 FFF7FEFF 		bl	HAL_TIM_OC_Init
 398              	.LVL11:
 194:Core/Src/main.c ****   {
 399              		.loc 1 194 6 discriminator 1 view .LVU101
 400 0056 10BB     		cbnz	r0, .L30
 198:Core/Src/main.c ****   {
 401              		.loc 1 198 3 is_stmt 1 view .LVU102
 198:Core/Src/main.c ****   {
 402              		.loc 1 198 7 is_stmt 0 view .LVU103
 403 0058 0821     		movs	r1, #8
 404 005a 1548     		ldr	r0, .L34
 405 005c FFF7FEFF 		bl	HAL_TIM_OnePulse_Init
 406              	.LVL12:
 198:Core/Src/main.c ****   {
 407              		.loc 1 198 6 discriminator 1 view .LVU104
 408 0060 F8B9     		cbnz	r0, .L31
 202:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 409              		.loc 1 202 3 is_stmt 1 view .LVU105
 202:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 410              		.loc 1 202 37 is_stmt 0 view .LVU106
 411 0062 0023     		movs	r3, #0
 412 0064 0893     		str	r3, [sp, #32]
 203:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 413              		.loc 1 203 3 is_stmt 1 view .LVU107
 203:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 414              		.loc 1 203 33 is_stmt 0 view .LVU108
 415 0066 0993     		str	r3, [sp, #36]
 204:Core/Src/main.c ****   {
 416              		.loc 1 204 3 is_stmt 1 view .LVU109
 204:Core/Src/main.c ****   {
 417              		.loc 1 204 7 is_stmt 0 view .LVU110
 418 0068 08A9     		add	r1, sp, #32
 419 006a 1148     		ldr	r0, .L34
 420 006c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 421              	.LVL13:
 204:Core/Src/main.c ****   {
 422              		.loc 1 204 6 discriminator 1 view .LVU111
 423 0070 C8B9     		cbnz	r0, .L32
 208:Core/Src/main.c ****   sConfigOC.Pulse = 75;
 424              		.loc 1 208 3 is_stmt 1 view .LVU112
 208:Core/Src/main.c ****   sConfigOC.Pulse = 75;
 425              		.loc 1 208 20 is_stmt 0 view .LVU113
 426 0072 0023     		movs	r3, #0
 427 0074 0193     		str	r3, [sp, #4]
 209:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 428              		.loc 1 209 3 is_stmt 1 view .LVU114
 209:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 429              		.loc 1 209 19 is_stmt 0 view .LVU115
 430 0076 4B22     		movs	r2, #75
ARM GAS  /tmp/ccEJjn6T.s 			page 17


 431 0078 0292     		str	r2, [sp, #8]
 210:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 432              		.loc 1 210 3 is_stmt 1 view .LVU116
 210:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 433              		.loc 1 210 24 is_stmt 0 view .LVU117
 434 007a 0393     		str	r3, [sp, #12]
 211:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 435              		.loc 1 211 3 is_stmt 1 view .LVU118
 211:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 436              		.loc 1 211 24 is_stmt 0 view .LVU119
 437 007c 0593     		str	r3, [sp, #20]
 212:Core/Src/main.c ****   {
 438              		.loc 1 212 3 is_stmt 1 view .LVU120
 212:Core/Src/main.c ****   {
 439              		.loc 1 212 7 is_stmt 0 view .LVU121
 440 007e 0822     		movs	r2, #8
 441 0080 01A9     		add	r1, sp, #4
 442 0082 0B48     		ldr	r0, .L34
 443 0084 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 444              	.LVL14:
 212:Core/Src/main.c ****   {
 445              		.loc 1 212 6 discriminator 1 view .LVU122
 446 0088 78B9     		cbnz	r0, .L33
 219:Core/Src/main.c **** 
 447              		.loc 1 219 3 is_stmt 1 view .LVU123
 448 008a 0948     		ldr	r0, .L34
 449 008c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 450              	.LVL15:
 221:Core/Src/main.c **** 
 451              		.loc 1 221 1 is_stmt 0 view .LVU124
 452 0090 0FB0     		add	sp, sp, #60
 453              	.LCFI7:
 454              		.cfi_remember_state
 455              		.cfi_def_cfa_offset 4
 456              		@ sp needed
 457 0092 5DF804FB 		ldr	pc, [sp], #4
 458              	.L28:
 459              	.LCFI8:
 460              		.cfi_restore_state
 187:Core/Src/main.c ****   }
 461              		.loc 1 187 5 is_stmt 1 view .LVU125
 462 0096 FFF7FEFF 		bl	Error_Handler
 463              	.LVL16:
 464              	.L29:
 192:Core/Src/main.c ****   }
 465              		.loc 1 192 5 view .LVU126
 466 009a FFF7FEFF 		bl	Error_Handler
 467              	.LVL17:
 468              	.L30:
 196:Core/Src/main.c ****   }
 469              		.loc 1 196 5 view .LVU127
 470 009e FFF7FEFF 		bl	Error_Handler
 471              	.LVL18:
 472              	.L31:
 200:Core/Src/main.c ****   }
 473              		.loc 1 200 5 view .LVU128
 474 00a2 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccEJjn6T.s 			page 18


 475              	.LVL19:
 476              	.L32:
 206:Core/Src/main.c ****   }
 477              		.loc 1 206 5 view .LVU129
 478 00a6 FFF7FEFF 		bl	Error_Handler
 479              	.LVL20:
 480              	.L33:
 214:Core/Src/main.c ****   }
 481              		.loc 1 214 5 view .LVU130
 482 00aa FFF7FEFF 		bl	Error_Handler
 483              	.LVL21:
 484              	.L35:
 485 00ae 00BF     		.align	2
 486              	.L34:
 487 00b0 00000000 		.word	htim2
 488              		.cfi_endproc
 489              	.LFE68:
 491              		.section	.text.SystemClock_Config,"ax",%progbits
 492              		.align	1
 493              		.global	SystemClock_Config
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 498              	SystemClock_Config:
 499              	.LFB66:
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 500              		.loc 1 115 1 view -0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 64
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504 0000 00B5     		push	{lr}
 505              	.LCFI9:
 506              		.cfi_def_cfa_offset 4
 507              		.cfi_offset 14, -4
 508 0002 91B0     		sub	sp, sp, #68
 509              	.LCFI10:
 510              		.cfi_def_cfa_offset 72
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 511              		.loc 1 116 3 view .LVU132
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 512              		.loc 1 116 22 is_stmt 0 view .LVU133
 513 0004 2822     		movs	r2, #40
 514 0006 0021     		movs	r1, #0
 515 0008 06A8     		add	r0, sp, #24
 516 000a FFF7FEFF 		bl	memset
 517              	.LVL22:
 117:Core/Src/main.c **** 
 518              		.loc 1 117 3 is_stmt 1 view .LVU134
 117:Core/Src/main.c **** 
 519              		.loc 1 117 22 is_stmt 0 view .LVU135
 520 000e 0023     		movs	r3, #0
 521 0010 0193     		str	r3, [sp, #4]
 522 0012 0293     		str	r3, [sp, #8]
 523 0014 0393     		str	r3, [sp, #12]
 524 0016 0493     		str	r3, [sp, #16]
 525 0018 0593     		str	r3, [sp, #20]
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  /tmp/ccEJjn6T.s 			page 19


 526              		.loc 1 122 3 is_stmt 1 view .LVU136
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 527              		.loc 1 122 36 is_stmt 0 view .LVU137
 528 001a 0122     		movs	r2, #1
 529 001c 0692     		str	r2, [sp, #24]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 530              		.loc 1 123 3 is_stmt 1 view .LVU138
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 531              		.loc 1 123 30 is_stmt 0 view .LVU139
 532 001e 4FF48033 		mov	r3, #65536
 533 0022 0793     		str	r3, [sp, #28]
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 534              		.loc 1 124 3 is_stmt 1 view .LVU140
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 535              		.loc 1 125 3 view .LVU141
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 536              		.loc 1 125 30 is_stmt 0 view .LVU142
 537 0024 0A92     		str	r2, [sp, #40]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 538              		.loc 1 126 3 is_stmt 1 view .LVU143
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 539              		.loc 1 126 34 is_stmt 0 view .LVU144
 540 0026 0222     		movs	r2, #2
 541 0028 0D92     		str	r2, [sp, #52]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 542              		.loc 1 127 3 is_stmt 1 view .LVU145
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 543              		.loc 1 127 35 is_stmt 0 view .LVU146
 544 002a 0E93     		str	r3, [sp, #56]
 128:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 545              		.loc 1 128 3 is_stmt 1 view .LVU147
 128:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 546              		.loc 1 128 32 is_stmt 0 view .LVU148
 547 002c 4FF4E013 		mov	r3, #1835008
 548 0030 0F93     		str	r3, [sp, #60]
 129:Core/Src/main.c ****   {
 549              		.loc 1 129 3 is_stmt 1 view .LVU149
 129:Core/Src/main.c ****   {
 550              		.loc 1 129 7 is_stmt 0 view .LVU150
 551 0032 06A8     		add	r0, sp, #24
 552 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 553              	.LVL23:
 129:Core/Src/main.c ****   {
 554              		.loc 1 129 6 discriminator 1 view .LVU151
 555 0038 80B9     		cbnz	r0, .L40
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 556              		.loc 1 136 3 is_stmt 1 view .LVU152
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 557              		.loc 1 136 31 is_stmt 0 view .LVU153
 558 003a 0F23     		movs	r3, #15
 559 003c 0193     		str	r3, [sp, #4]
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 560              		.loc 1 138 3 is_stmt 1 view .LVU154
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 561              		.loc 1 138 34 is_stmt 0 view .LVU155
 562 003e 0221     		movs	r1, #2
 563 0040 0291     		str	r1, [sp, #8]
ARM GAS  /tmp/ccEJjn6T.s 			page 20


 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 564              		.loc 1 139 3 is_stmt 1 view .LVU156
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 565              		.loc 1 139 35 is_stmt 0 view .LVU157
 566 0042 0023     		movs	r3, #0
 567 0044 0393     		str	r3, [sp, #12]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 568              		.loc 1 140 3 is_stmt 1 view .LVU158
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 569              		.loc 1 140 36 is_stmt 0 view .LVU159
 570 0046 4FF48062 		mov	r2, #1024
 571 004a 0492     		str	r2, [sp, #16]
 141:Core/Src/main.c **** 
 572              		.loc 1 141 3 is_stmt 1 view .LVU160
 141:Core/Src/main.c **** 
 573              		.loc 1 141 36 is_stmt 0 view .LVU161
 574 004c 0593     		str	r3, [sp, #20]
 143:Core/Src/main.c ****   {
 575              		.loc 1 143 3 is_stmt 1 view .LVU162
 143:Core/Src/main.c ****   {
 576              		.loc 1 143 7 is_stmt 0 view .LVU163
 577 004e 01A8     		add	r0, sp, #4
 578 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 579              	.LVL24:
 143:Core/Src/main.c ****   {
 580              		.loc 1 143 6 discriminator 1 view .LVU164
 581 0054 20B9     		cbnz	r0, .L41
 147:Core/Src/main.c **** 
 582              		.loc 1 147 1 view .LVU165
 583 0056 11B0     		add	sp, sp, #68
 584              	.LCFI11:
 585              		.cfi_remember_state
 586              		.cfi_def_cfa_offset 4
 587              		@ sp needed
 588 0058 5DF804FB 		ldr	pc, [sp], #4
 589              	.L40:
 590              	.LCFI12:
 591              		.cfi_restore_state
 131:Core/Src/main.c ****   }
 592              		.loc 1 131 5 is_stmt 1 view .LVU166
 593 005c FFF7FEFF 		bl	Error_Handler
 594              	.LVL25:
 595              	.L41:
 145:Core/Src/main.c ****   }
 596              		.loc 1 145 5 view .LVU167
 597 0060 FFF7FEFF 		bl	Error_Handler
 598              	.LVL26:
 599              		.cfi_endproc
 600              	.LFE66:
 602              		.section	.text.main,"ax",%progbits
 603              		.align	1
 604              		.global	main
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 609              	main:
 610              	.LFB65:
ARM GAS  /tmp/ccEJjn6T.s 			page 21


  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 611              		.loc 1 68 1 view -0
 612              		.cfi_startproc
 613              		@ Volatile: function does not return.
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616 0000 08B5     		push	{r3, lr}
 617              	.LCFI13:
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 3, -8
 620              		.cfi_offset 14, -4
  76:Core/Src/main.c **** 
 621              		.loc 1 76 3 view .LVU169
 622 0002 FFF7FEFF 		bl	HAL_Init
 623              	.LVL27:
  83:Core/Src/main.c **** 
 624              		.loc 1 83 3 view .LVU170
 625 0006 FFF7FEFF 		bl	SystemClock_Config
 626              	.LVL28:
  90:Core/Src/main.c ****   MX_TIM2_Init();
 627              		.loc 1 90 3 view .LVU171
 628 000a FFF7FEFF 		bl	MX_GPIO_Init
 629              	.LVL29:
  91:Core/Src/main.c **** 
 630              		.loc 1 91 3 view .LVU172
 631 000e FFF7FEFF 		bl	MX_TIM2_Init
 632              	.LVL30:
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 633              		.loc 1 94 3 view .LVU173
 634 0012 FFF7FEFF 		bl	MX_NVIC_Init
 635              	.LVL31:
 636              	.L43:
 101:Core/Src/main.c ****   {
 637              		.loc 1 101 3 view .LVU174
 106:Core/Src/main.c ****   /* USER CODE END 3 */
 638              		.loc 1 106 3 view .LVU175
 101:Core/Src/main.c ****   {
 639              		.loc 1 101 9 view .LVU176
 640 0016 FEE7     		b	.L43
 641              		.cfi_endproc
 642              	.LFE65:
 644              		.section	.bss.counter.0,"aw",%nobits
 647              	counter.0:
 648 0000 00       		.space	1
 649              		.global	htim2
 650              		.section	.bss.htim2,"aw",%nobits
 651              		.align	2
 654              	htim2:
 655 0000 00000000 		.space	72
 655      00000000 
 655      00000000 
 655      00000000 
 655      00000000 
 656              		.text
 657              	.Letext0:
 658              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 659              		.file 4 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccEJjn6T.s 			page 22


 660              		.file 5 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 661              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 662              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 663              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 664              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 665              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 666              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 667              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 668              		.file 13 "Core/Inc/main.h"
 669              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 670              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 671              		.file 16 "<built-in>"
ARM GAS  /tmp/ccEJjn6T.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccEJjn6T.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccEJjn6T.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccEJjn6T.s:160    .text.MX_GPIO_Init:00000098 $d
     /tmp/ccEJjn6T.s:168    .text.MX_NVIC_Init:00000000 $t
     /tmp/ccEJjn6T.s:173    .text.MX_NVIC_Init:00000000 MX_NVIC_Init
     /tmp/ccEJjn6T.s:200    .text.HAL_GPIO_EXTI_Callback:00000000 $t
     /tmp/ccEJjn6T.s:206    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
     /tmp/ccEJjn6T.s:272    .text.HAL_GPIO_EXTI_Callback:00000044 $d
     /tmp/ccEJjn6T.s:647    .bss.counter.0:00000000 counter.0
     /tmp/ccEJjn6T.s:278    .text.Error_Handler:00000000 $t
     /tmp/ccEJjn6T.s:284    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccEJjn6T.s:316    .text.MX_TIM2_Init:00000000 $t
     /tmp/ccEJjn6T.s:321    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
     /tmp/ccEJjn6T.s:487    .text.MX_TIM2_Init:000000b0 $d
     /tmp/ccEJjn6T.s:654    .bss.htim2:00000000 htim2
     /tmp/ccEJjn6T.s:492    .text.SystemClock_Config:00000000 $t
     /tmp/ccEJjn6T.s:498    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccEJjn6T.s:603    .text.main:00000000 $t
     /tmp/ccEJjn6T.s:609    .text.main:00000000 main
     /tmp/ccEJjn6T.s:648    .bss.counter.0:00000000 $d
     /tmp/ccEJjn6T.s:651    .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIM_OnePulse_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
