ARM GAS  /tmp/ccX7OUKK.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB67:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccX7OUKK.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Core/Src/main.c ****   HAL_Init();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Configure the system clock */
  80:Core/Src/main.c ****   SystemClock_Config();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Initialize all configured peripherals */
  87:Core/Src/main.c ****   MX_GPIO_Init();
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END 2 */
ARM GAS  /tmp/ccX7OUKK.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Infinite loop */
  93:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  94:Core/Src/main.c ****   while (1)
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     /* USER CODE END WHILE */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  99:Core/Src/main.c ****   }
 100:Core/Src/main.c ****   /* USER CODE END 3 */
 101:Core/Src/main.c **** }
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /**
 104:Core/Src/main.c ****   * @brief System Clock Configuration
 105:Core/Src/main.c ****   * @retval None
 106:Core/Src/main.c ****   */
 107:Core/Src/main.c **** void SystemClock_Config(void)
 108:Core/Src/main.c **** {
 109:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 110:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 113:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 116:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 117:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 118:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 122:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 123:Core/Src/main.c ****   {
 124:Core/Src/main.c ****     Error_Handler();
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 130:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 131:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 132:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 133:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 134:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 137:Core/Src/main.c ****   {
 138:Core/Src/main.c ****     Error_Handler();
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief GPIO Initialization Function
 144:Core/Src/main.c ****   * @param None
 145:Core/Src/main.c ****   * @retval None
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c **** static void MX_GPIO_Init(void)
ARM GAS  /tmp/ccX7OUKK.s 			page 4


 148:Core/Src/main.c **** {
  26              		.loc 1 148 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 149:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 149 3 view .LVU1
  40              		.loc 1 149 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 150:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 151:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 154:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 154 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 154 3 view .LVU4
  49              		.loc 1 154 3 view .LVU5
  50 000e 224B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 154 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 154 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 154 3 view .LVU8
 155:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  62              		.loc 1 155 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 155 3 view .LVU10
  65              		.loc 1 155 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F02002 		orr	r2, r2, #32
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 155 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F02002 		and	r2, r2, #32
  72 0030 0192     		str	r2, [sp, #4]
  73              		.loc 1 155 3 view .LVU13
  74 0032 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccX7OUKK.s 			page 5


  75              	.LBE5:
  76              		.loc 1 155 3 view .LVU14
 156:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  77              		.loc 1 156 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 156 3 view .LVU16
  80              		.loc 1 156 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00802 		orr	r2, r2, #8
  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 156 3 view .LVU18
  85 003c 9A69     		ldr	r2, [r3, #24]
  86 003e 02F00802 		and	r2, r2, #8
  87 0042 0292     		str	r2, [sp, #8]
  88              		.loc 1 156 3 view .LVU19
  89 0044 029A     		ldr	r2, [sp, #8]
  90              	.LBE6:
  91              		.loc 1 156 3 view .LVU20
 157:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  92              		.loc 1 157 3 view .LVU21
  93              	.LBB7:
  94              		.loc 1 157 3 view .LVU22
  95              		.loc 1 157 3 view .LVU23
  96 0046 9A69     		ldr	r2, [r3, #24]
  97 0048 42F00402 		orr	r2, r2, #4
  98 004c 9A61     		str	r2, [r3, #24]
  99              		.loc 1 157 3 view .LVU24
 100 004e 9B69     		ldr	r3, [r3, #24]
 101 0050 03F00403 		and	r3, r3, #4
 102 0054 0393     		str	r3, [sp, #12]
 103              		.loc 1 157 3 view .LVU25
 104 0056 039B     		ldr	r3, [sp, #12]
 105              	.LBE7:
 106              		.loc 1 157 3 view .LVU26
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 160:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED_Pin|MTR_Pin, GPIO_PIN_RESET);
 107              		.loc 1 160 3 view .LVU27
 108 0058 104D     		ldr	r5, .L3+4
 109 005a 2246     		mov	r2, r4
 110 005c 4FF42041 		mov	r1, #40960
 111 0060 2846     		mov	r0, r5
 112 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /*Configure GPIO pins : LED_Pin MTR_Pin */
 163:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin|MTR_Pin;
 114              		.loc 1 163 3 view .LVU28
 115              		.loc 1 163 23 is_stmt 0 view .LVU29
 116 0066 4FF42043 		mov	r3, #40960
 117 006a 0493     		str	r3, [sp, #16]
 164:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 164 3 is_stmt 1 view .LVU30
 119              		.loc 1 164 24 is_stmt 0 view .LVU31
 120 006c 0123     		movs	r3, #1
 121 006e 0593     		str	r3, [sp, #20]
 165:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccX7OUKK.s 			page 6


 122              		.loc 1 165 3 is_stmt 1 view .LVU32
 123              		.loc 1 165 24 is_stmt 0 view .LVU33
 124 0070 0694     		str	r4, [sp, #24]
 166:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 125              		.loc 1 166 3 is_stmt 1 view .LVU34
 126              		.loc 1 166 25 is_stmt 0 view .LVU35
 127 0072 0223     		movs	r3, #2
 128 0074 0793     		str	r3, [sp, #28]
 167:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 129              		.loc 1 167 3 is_stmt 1 view .LVU36
 130 0076 04A9     		add	r1, sp, #16
 131 0078 2846     		mov	r0, r5
 132 007a FFF7FEFF 		bl	HAL_GPIO_Init
 133              	.LVL1:
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /*Configure GPIO pin : OPTO_Pin */
 170:Core/Src/main.c ****   GPIO_InitStruct.Pin = OPTO_Pin;
 134              		.loc 1 170 3 view .LVU37
 135              		.loc 1 170 23 is_stmt 0 view .LVU38
 136 007e 4FF40063 		mov	r3, #2048
 137 0082 0493     		str	r3, [sp, #16]
 171:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 138              		.loc 1 171 3 is_stmt 1 view .LVU39
 139              		.loc 1 171 24 is_stmt 0 view .LVU40
 140 0084 064B     		ldr	r3, .L3+8
 141 0086 0593     		str	r3, [sp, #20]
 172:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 142              		.loc 1 172 3 is_stmt 1 view .LVU41
 143              		.loc 1 172 24 is_stmt 0 view .LVU42
 144 0088 0694     		str	r4, [sp, #24]
 173:Core/Src/main.c ****   HAL_GPIO_Init(OPTO_GPIO_Port, &GPIO_InitStruct);
 145              		.loc 1 173 3 is_stmt 1 view .LVU43
 146 008a 04A9     		add	r1, sp, #16
 147 008c 0548     		ldr	r0, .L3+12
 148 008e FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 176:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 177:Core/Src/main.c **** }
 150              		.loc 1 177 1 is_stmt 0 view .LVU44
 151 0092 09B0     		add	sp, sp, #36
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 12
 154              		@ sp needed
 155 0094 30BD     		pop	{r4, r5, pc}
 156              	.L4:
 157 0096 00BF     		.align	2
 158              	.L3:
 159 0098 00100240 		.word	1073876992
 160 009c 00100140 		.word	1073811456
 161 00a0 00003110 		.word	271646720
 162 00a4 000C0140 		.word	1073810432
 163              		.cfi_endproc
 164              	.LFE67:
 166              		.section	.text.Error_Handler,"ax",%progbits
 167              		.align	1
ARM GAS  /tmp/ccX7OUKK.s 			page 7


 168              		.global	Error_Handler
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 173              	Error_Handler:
 174              	.LFB68:
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /* USER CODE END 4 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** /**
 184:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** void Error_Handler(void)
 188:Core/Src/main.c **** {
 175              		.loc 1 188 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ Volatile: function does not return.
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 189:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 190:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 191:Core/Src/main.c ****   __disable_irq();
 181              		.loc 1 191 3 view .LVU46
 182              	.LBB8:
 183              	.LBI8:
 184              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccX7OUKK.s 			page 8


  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
ARM GAS  /tmp/ccX7OUKK.s 			page 9


  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 185              		.loc 2 140 27 view .LVU47
ARM GAS  /tmp/ccX7OUKK.s 			page 10


 186              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 187              		.loc 2 142 3 view .LVU48
 188              		.syntax unified
 189              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 190 0000 72B6     		cpsid i
 191              	@ 0 "" 2
 192              		.thumb
 193              		.syntax unified
 194              	.L6:
 195              	.LBE9:
 196              	.LBE8:
 192:Core/Src/main.c ****   while (1)
 197              		.loc 1 192 3 view .LVU49
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****   }
 198              		.loc 1 194 3 view .LVU50
 192:Core/Src/main.c ****   while (1)
 199              		.loc 1 192 9 view .LVU51
 200 0002 FEE7     		b	.L6
 201              		.cfi_endproc
 202              	.LFE68:
 204              		.section	.text.SystemClock_Config,"ax",%progbits
 205              		.align	1
 206              		.global	SystemClock_Config
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	SystemClock_Config:
 212              	.LFB66:
 108:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 213              		.loc 1 108 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 64
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 00B5     		push	{lr}
 218              	.LCFI3:
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 14, -4
 221 0002 91B0     		sub	sp, sp, #68
 222              	.LCFI4:
 223              		.cfi_def_cfa_offset 72
 109:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 224              		.loc 1 109 3 view .LVU53
 109:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 225              		.loc 1 109 22 is_stmt 0 view .LVU54
 226 0004 2822     		movs	r2, #40
 227 0006 0021     		movs	r1, #0
 228 0008 06A8     		add	r0, sp, #24
 229 000a FFF7FEFF 		bl	memset
 230              	.LVL3:
 110:Core/Src/main.c **** 
 231              		.loc 1 110 3 is_stmt 1 view .LVU55
 110:Core/Src/main.c **** 
 232              		.loc 1 110 22 is_stmt 0 view .LVU56
 233 000e 0023     		movs	r3, #0
ARM GAS  /tmp/ccX7OUKK.s 			page 11


 234 0010 0193     		str	r3, [sp, #4]
 235 0012 0293     		str	r3, [sp, #8]
 236 0014 0393     		str	r3, [sp, #12]
 237 0016 0493     		str	r3, [sp, #16]
 238 0018 0593     		str	r3, [sp, #20]
 115:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 239              		.loc 1 115 3 is_stmt 1 view .LVU57
 115:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 240              		.loc 1 115 36 is_stmt 0 view .LVU58
 241 001a 0122     		movs	r2, #1
 242 001c 0692     		str	r2, [sp, #24]
 116:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 243              		.loc 1 116 3 is_stmt 1 view .LVU59
 116:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 244              		.loc 1 116 30 is_stmt 0 view .LVU60
 245 001e 4FF48033 		mov	r3, #65536
 246 0022 0793     		str	r3, [sp, #28]
 117:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 247              		.loc 1 117 3 is_stmt 1 view .LVU61
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 248              		.loc 1 118 3 view .LVU62
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 249              		.loc 1 118 30 is_stmt 0 view .LVU63
 250 0024 0A92     		str	r2, [sp, #40]
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 251              		.loc 1 119 3 is_stmt 1 view .LVU64
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 252              		.loc 1 119 34 is_stmt 0 view .LVU65
 253 0026 0222     		movs	r2, #2
 254 0028 0D92     		str	r2, [sp, #52]
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 255              		.loc 1 120 3 is_stmt 1 view .LVU66
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 256              		.loc 1 120 35 is_stmt 0 view .LVU67
 257 002a 0E93     		str	r3, [sp, #56]
 121:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 258              		.loc 1 121 3 is_stmt 1 view .LVU68
 121:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 259              		.loc 1 121 32 is_stmt 0 view .LVU69
 260 002c 4FF4E013 		mov	r3, #1835008
 261 0030 0F93     		str	r3, [sp, #60]
 122:Core/Src/main.c ****   {
 262              		.loc 1 122 3 is_stmt 1 view .LVU70
 122:Core/Src/main.c ****   {
 263              		.loc 1 122 7 is_stmt 0 view .LVU71
 264 0032 06A8     		add	r0, sp, #24
 265 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 266              	.LVL4:
 122:Core/Src/main.c ****   {
 267              		.loc 1 122 6 discriminator 1 view .LVU72
 268 0038 80B9     		cbnz	r0, .L11
 129:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 269              		.loc 1 129 3 is_stmt 1 view .LVU73
 129:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 270              		.loc 1 129 31 is_stmt 0 view .LVU74
 271 003a 0F23     		movs	r3, #15
 272 003c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccX7OUKK.s 			page 12


 131:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 273              		.loc 1 131 3 is_stmt 1 view .LVU75
 131:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 274              		.loc 1 131 34 is_stmt 0 view .LVU76
 275 003e 0221     		movs	r1, #2
 276 0040 0291     		str	r1, [sp, #8]
 132:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 277              		.loc 1 132 3 is_stmt 1 view .LVU77
 132:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 278              		.loc 1 132 35 is_stmt 0 view .LVU78
 279 0042 0023     		movs	r3, #0
 280 0044 0393     		str	r3, [sp, #12]
 133:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 281              		.loc 1 133 3 is_stmt 1 view .LVU79
 133:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 282              		.loc 1 133 36 is_stmt 0 view .LVU80
 283 0046 4FF48062 		mov	r2, #1024
 284 004a 0492     		str	r2, [sp, #16]
 134:Core/Src/main.c **** 
 285              		.loc 1 134 3 is_stmt 1 view .LVU81
 134:Core/Src/main.c **** 
 286              		.loc 1 134 36 is_stmt 0 view .LVU82
 287 004c 0593     		str	r3, [sp, #20]
 136:Core/Src/main.c ****   {
 288              		.loc 1 136 3 is_stmt 1 view .LVU83
 136:Core/Src/main.c ****   {
 289              		.loc 1 136 7 is_stmt 0 view .LVU84
 290 004e 01A8     		add	r0, sp, #4
 291 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 292              	.LVL5:
 136:Core/Src/main.c ****   {
 293              		.loc 1 136 6 discriminator 1 view .LVU85
 294 0054 20B9     		cbnz	r0, .L12
 140:Core/Src/main.c **** 
 295              		.loc 1 140 1 view .LVU86
 296 0056 11B0     		add	sp, sp, #68
 297              	.LCFI5:
 298              		.cfi_remember_state
 299              		.cfi_def_cfa_offset 4
 300              		@ sp needed
 301 0058 5DF804FB 		ldr	pc, [sp], #4
 302              	.L11:
 303              	.LCFI6:
 304              		.cfi_restore_state
 124:Core/Src/main.c ****   }
 305              		.loc 1 124 5 is_stmt 1 view .LVU87
 306 005c FFF7FEFF 		bl	Error_Handler
 307              	.LVL6:
 308              	.L12:
 138:Core/Src/main.c ****   }
 309              		.loc 1 138 5 view .LVU88
 310 0060 FFF7FEFF 		bl	Error_Handler
 311              	.LVL7:
 312              		.cfi_endproc
 313              	.LFE66:
 315              		.section	.text.main,"ax",%progbits
 316              		.align	1
ARM GAS  /tmp/ccX7OUKK.s 			page 13


 317              		.global	main
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	main:
 323              	.LFB65:
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 324              		.loc 1 65 1 view -0
 325              		.cfi_startproc
 326              		@ Volatile: function does not return.
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI7:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
  73:Core/Src/main.c **** 
 334              		.loc 1 73 3 view .LVU90
 335 0002 FFF7FEFF 		bl	HAL_Init
 336              	.LVL8:
  80:Core/Src/main.c **** 
 337              		.loc 1 80 3 view .LVU91
 338 0006 FFF7FEFF 		bl	SystemClock_Config
 339              	.LVL9:
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 340              		.loc 1 87 3 view .LVU92
 341 000a FFF7FEFF 		bl	MX_GPIO_Init
 342              	.LVL10:
 343              	.L14:
  94:Core/Src/main.c ****   {
 344              		.loc 1 94 3 view .LVU93
  99:Core/Src/main.c ****   /* USER CODE END 3 */
 345              		.loc 1 99 3 view .LVU94
  94:Core/Src/main.c ****   {
 346              		.loc 1 94 9 view .LVU95
 347 000e FEE7     		b	.L14
 348              		.cfi_endproc
 349              	.LFE65:
 351              		.text
 352              	.Letext0:
 353              		.file 3 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 354              		.file 4 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 355              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 356              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 357              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 358              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 359              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 360              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 361              		.file 11 "<built-in>"
ARM GAS  /tmp/ccX7OUKK.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccX7OUKK.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccX7OUKK.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccX7OUKK.s:159    .text.MX_GPIO_Init:00000098 $d
     /tmp/ccX7OUKK.s:167    .text.Error_Handler:00000000 $t
     /tmp/ccX7OUKK.s:173    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccX7OUKK.s:205    .text.SystemClock_Config:00000000 $t
     /tmp/ccX7OUKK.s:211    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccX7OUKK.s:316    .text.main:00000000 $t
     /tmp/ccX7OUKK.s:322    .text.main:00000000 main

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
